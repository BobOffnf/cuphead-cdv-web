
b5.LoadScene = function(world, scene, data, game) {
	//scene is the main scene where resources and actors will be added
	//game is equivalent to b5.Game where there's things like the loading screen, scene loader, player, configs and	more.
	//you should add local variables on data object, for them to be removed when another scene is being loaded, for global variables add them to game or write it to a file.
  
  data.levelID = 6; //Original Cuphead level ID
  
  game.SlotUtils.getLevelData(6).played = true;
  
  game.importObject('CreateLevel')
      .init()
      .loadFightTextsResources();
      
  world.camera_speed_x = 0.11;
      
  //Statictics are created on CreateLevel
  //Onion and Radish resources
  //Load only on Difficulty > 0 (Normal / Hard)
  if(data.Statistics.skill > 0) new b5.Raw('OnionResourcesDescriptor', data.resourcePath + 'phase2.resources.json', true, desc => {
  	game.parseResources(desc, scene);
  	scene.tryLoadNextResource();
  },true);
      
  //Utils
  data.createDirtBurst = function(layer) {
   	var burstF = new b5.Actor(),
  	burstB = new b5.Actor(burstB);
  	burstF.atlas = scene.findResource('DirtBurstAtlas','brush');
  	
  	burstF.name = 'DirtBurst-front';
  	burstF.layer = 3;
  	
  	burstB.name = 'DirtBurst-back';
  	burstB.layer = 1;
  	burstB.atlas = burstF.atlas;
  	burstF.back = burstB;
  	burstB._scale = 1.3;
  	burstF._scale = 1.47;
  	burstF.play = function() {
  		this.back.visible = false;
  		this.playAnim('burst_front');
  		this.back.setTimeout(t=>{
  			t.data.visible = true;
  			t.data.playAnim('burst_back');
  		},1);
  	}
  	burstF.onPositionSet = function() {
  		this.back.setPosition(this.x,this.y-15);
  	}
  	world[layer?layer:"Layer"+data.view.playerLayer].addActor(burstF);
  	burstF.parent.addActor(burstB);
  	return burstF;
  };
      
  game.importObject('CreatePlayer');
  game.importObject('CreateEnemies');
  game.importObject('CreateCommonBossLevelResources');
  game.importObject('CreateBoss');
  
  data.Statistics.level_type = 'boss'; //For winscreen
  data.Statistics.optimalTime = 150; //Time to beat the boss for score
  
  
  
};
b5.onLoadingScreenOut = function(world, scene, data, game) {
	//Called when the loading screen is fading out, here you can start animating your actors and do whatever you want!
  data.initializePlayers();

	//Initialize multiplayer
	game.Multiplayer.Initialize(world, data);
	
	if(!data.levelData.fightStarted) {
		data.playFightText('GetReady');
  	data.playersIntroAnimation();
	}
	
	scene.findResource('MUS_BotanicPanic','sound').play();

};
b5.addSceneResources = function(scene, data, game) {
	//Resources that will be added to scene, this will be called before LoadScene
  
};
b5.onSceneUnload = function(world, scene, data, game, clearResources) {
    //Called when app is about to remove the scene, if clearResources is true, that means the app will clean the resources of the scene
    //You can also remove created objects in b5.Game if they were created and used on the scene.

};
