b5 = {}; 
b5.app = null, b5.data = {}, b5.version = 2.5, 'use strict', function() {
  for (var e = 0, t = ['ms', 'moz', 'webkit', 'o'], o = 0;
    o < t.length&&!window.requestAnimationFrame;
    ++o)window.requestAnimationFrame = window[t[o]+'RequestAnimationFrame'],
  window.cancelAnimationFrame = window[t[o]+'CancelAnimationFrame'] || window[t[o]+'CancelRequestAnimationFrame'];
  window.requestAnimationFrame || (window.requestAnimationFrame = function(t) {console.log("requestAnimationFrame not available, using alternative.");
    var o = new Date().getTime(), a = Math.max(0, 16-(o-e)), n = window.setTimeout(function() {
      t(o+a)}, a);
    return e = o+a, n;
  }),
  window.cancelAnimationFrame || (window.cancelAnimationFrame = function(e) {
    clearTimeout(e)})}(), 
'use strict', 
/** Polyfills **/
typeof String.prototype.replaceAll !== 'function' && (String.prototype.replaceAll = function(e,t) {
	return Function('return arguments[0].replace(/'+e+'/gi,`'+t+'`);')(this);
}),
b5.Ease = function() {}, b5.Ease.linear = 0, b5.Ease.quadin = 1, b5.Ease.quadout = 2, b5.Ease.cubicin = 3, b5.Ease.cubicout = 4, b5.Ease.quartin = 5, b5.Ease.quartout = 6, b5.Ease.sinin = 7, b5.Ease.sinout = 8, b5.Ease.sininout = 9, b5.Ease.quadinout = 10, b5.Ease.cubicinout = 11, b5.Ease.quarticinout = 12, b5.Ease.bouncein = 13, b5.Ease.bounceout = 14, b5.Ease.bounceinout = 15, b5.Ease.backin = 16, b5.Ease.backout = 17, b5.Ease.backinout = 18, b5.Ease.circin = 19, b5.Ease.circout = 20, b5.Ease.circinout = 21, b5.Ease.expin = 22, b5.Ease.expout = 23, b5.Ease.expinout = 24, b5.Ease.elasticout = 25, b5.Ease.none = 26, b5.Ease.steps = 27,
b5.Ease.easingFuncs = [function(e) {
    return e;
  }, function(e) {
    return e*e;
  }, function(e) {
    return e*(2-e)}, function(e) {
    return e*e*e;
  }, function(e) {
    return e -= 1,
    e*e*e+1;
  }, function(e) {
    return e*e*e*e;
  }, function(e) {
    return e -= 1,
    -(e*e*e*e-1)}, function(e) {
    return 1-Math.cos(e*Math.PI/2)}, function(e) {
    return Math.sin(e*Math.PI/2)}, function(e) {
    return 0.5*(1-Math.cos(Math.PI*e))}, function(e) {
    return 0.5 > e?2*e*e: -1+(4-2*e)*e;
  }, function(e) {
    return 0.5 > e?4*e*e*e: (e-1)*(2*e-2)*(2*e-2)+1;
  }, function(e) {
    return 0.5 > e?8*e*e*e*e: 1-8*--e*e*e*e
  }, function(e) {
    return 1-b5.Ease.easingFuncs[b5.Ease.bounceout](1-e)}, function(e) {
    return e < 1/2.75?7.5625*e*e: e < 2/2.75?7.5625*(e -= 1.5/2.75)*e+.75: e < 2.5/2.75?7.5625*(e -= 2.25/2.75)*e+.9375: 7.5625*(e -= 2.625/2.75)*e+.984375
  }, function(e) {
    return .5 > e?.5*b5.Ease.easingFuncs[b5.Ease.bounceout](2*e): .5*b5.Ease.easingFuncs[b5.Ease.bounceout](2*e-1)+.5
  }, function(e) {
    var t = 1.70158;
    return e*e*((t+1)*e-t)}, function(e) {
    var t = 1.70158;
    return--e*e*((t+1)*e+t)+1
  }, function(e) {
    var t = 1.525*1.70158;
    e = 1 > (e *= 2)?.5*(e*e*((t+1)*e-t)): .5*((e -= 2)*e*((t+1)*e+t)+2)}, function(e) {
    return 1-Math.sqrt(1-e*e)
  }, function(e) {
    return Math.sqrt(1- (--e)*e)}, function(e) {
    var t = Math.sqrt;
    e *= 2,
    e = 1 > e?-.5*(t(1-e*e)-1): .5*(t(1-(e -= 2)*e)+1)}, function(e) {
    return 0 == e?0: Math.pow(1024, e-1)}, function(e) {
    return 1 == e?e: 1-Math.pow(2, -10*e)}, function(e) {
    var t = Math.pow;
    return 0 == e?0: 1 == e?1: 1 > (e *= 2)?.5*t(1024, e-1): .5*(-t(2, -10*(e-1))+2)},
    function(e) {
    	return 1+(Math.sin((e*25)-90) * (1-e) * (1-e) * (1-e));
    },
    function(e) {
    	return 0;
    },
    function(e,t) {
    	return Math.round(e*t)/t;
    }],
  'use strict', 
  b5.Animation = function(e, t, o, a, n, r, i) {
  this.timeline = e,
  this.state = b5.Animation.AS_playing,
  this.time=-1e-6,
  this.repeats_left = r,
  this.index=-1,
  this.name = null,
  this.target = t,
  this.property = o,
  this.frames = a,
  this.times = n,
  this.easing = i,
  this.repeat = r,
  this.destroy=!1,
  this.actions = [],
  this.time_scale = 1,
  this.delay=-0.001,
  this.tween=!0,
  this.easing_steps=5,
  this.deactivate=!1,
  this.onEnd = null,
  this.onRepeat =	null;
}, b5.Animation.AS_playing = 0, b5.Animation.AS_paused = 1, b5.Animation.prototype.setRelative = function(e) {
  this.initial_value = e?this.target[this.property]: void 0;
}, b5.Animation.prototype.pause = function() {
  this.state = b5.Animation.AS_paused;
}, b5.Animation.prototype.play = function() {
  this.state = b5.Animation.AS_playing;
}, b5.Animation.prototype.restart = function() {
  this.state = b5.Animation.AS_playing,
  this.time = this.delay,
  this.index=-1,
  this.repeats_left = this.repeat;
}, b5.Animation.prototype.update = function(e) {
  if (this.state !== b5.Animation.AS_playing)return!1;
  e *= this.time_scale;
  var o = this.time+e,
  a = this.times,
  n = this.frames,
  r = a.length,
  i = this.index;
  if (0 > o) {
    var s = n[0];
    return void 0 !== this.initial_value && (s += this.initial_value),
    this.target[this.property] = s,
    this.time = o,
    !0;
  }if (1 >= r)return!1;
  for (var c = i, d;
    c < r;
    c++)if (d = a[c], o < d) {
    if (this.index = c, o >= a[0]) {
      if (this.index !== i) {
        var p = this.actions[this.index-1];
        void 0 !== p && p()}var l = a[c-1],
      y = n[c-1],
      _ = o-l;
      if (0 != _) {
        var s;
        if (this.tween) {
          var u = d-l,
          h = n[c]-y;
          s = void 0 === this.easing?y+h*_/u: y+h*b5.Ease.easingFuncs[this.easing[c-1]](_/u,this.easing_steps)} else s = y;
        void 0 !== this.initial_value && (s += this.initial_value),
        this.target[this.property] = s;
      }}break;
  }var g = a[a.length-1];
  if (o > g) {
    if (0 < this.repeat && this.repeats_left--, 0 === this.repeat || 0 < this.repeats_left) {
      for (;
        o >= g;
      )o -= g;
      null !== this.onRepeat && this.onRepeat(this);
      var s = n[0];
      void 0 !== this.initial_value && (s += this.initial_value),
      this.target[this.property] = s;
    } else {
      var s = n[a.length-1];
      void 0 !== this.initial_value && (s += this.initial_value),
      this.target[this.property] = s,
      this.state = b5.Animation.AS_paused,
      this.destroy && this.timeline.remove(this),
      //changed void 0 to regular check
      this.onEnd && this.onEnd(this),
      this.deactivate && (this.target._av=!1)}this.index=-1;
  }return this.time = o,
  !0
}, b5.Animation.prototype.setTime = function(e) {
  this.time = e,
  this.index=-1,
  this.update(0)}, b5.Animation.prototype.setAction = function(e, t) {
  this.actions[e] = t
}, 'use strict', b5.Timeline = function(e, t, o, a, n, r) {
  this.anims = [],
  this.manager = null,
  this.name = null,
  this.playing=!1,
  e !== void 0 && this.add(e, t, o, a, n, r)}, b5.Timeline.prototype.setRelative = function(e) {
  for (var o = this.anims, a = o.length, n = 0;
    n < a;
    n++)o[n].setRelative(e)}, b5.Timeline.prototype.setRepeats = function(e) {
  for (var o = this.anims, a = o.length, n = 0;
    n < a;
    n++)o[n].repeat = e,
  o[n].repeats_left = e
}, b5.Timeline.prototype.add = function(e, t, o, a, n, r) {
  if (1 == arguments.length)return e.timeline = this,
  this.anims.push(e),
  e;
  var i = new b5.Animation(this, e, t, o, a, n, r);
  return this.anims.push(i),
  i
}, b5.Timeline.prototype.remove = function(e) {
  for (var o = this.anims, a = o.length, n = 0;
    n < a;
    n++)if (o[n] === e)return void o.splice(n, 1)}, b5.Timeline.prototype.changeTarget = function(e) {
  for (var o = this.anims, a = o.length, n = 0;
    n < a;
    n++)o[n].target = e
}, b5.Timeline.prototype.find = function(e) {
  for (var o = this.anims, a = o.length, n = 0;
    n < a;
    n++)if (o[n].name === e)return o[n];
  return null
}, b5.Timeline.prototype.setDelay = function(e) {
  for (var o = this.anims, a = o.length, n = 0;
    n < a;
    n++)o[n].delay=-e,
  o[n].time=-e
}, b5.Timeline.prototype.pause = function() {
  for (var e = this.anims.length, o = 0;
    o < e;
    o++)this.anims[o].pause()}, b5.Timeline.prototype.play = function() {
  for (var e = this.anims.length, o = 0;
    o < e;
    o++)this.anims[o].play()}, b5.Timeline.prototype.restart = function() {
  for (var e = this.anims.length, o = 0;
    o < e;
    o++)this.anims[o].restart()}, b5.Timeline.prototype.print = function() {
  for (var e = this.anims.length, o = 0;
    o < e;
    o++)console.log(this.anims[o])}, b5.Timeline.prototype.update = function(e) {
  var o = this.anims.length;
  if (0 === o && void 0 !== this.manager)return this.manager.remove(this),
  !0;
  this.playing=!1;
  for (var a = o-1;
    0 <= a;
    a--)this.anims[a].update(e) && (this.playing=!0);
  return this.playing
}, 'use strict', b5.TimelineManager = function(e) {
  this.timelines = [],
  this.parent = e,
  this.playing=!1
}, b5.TimelineManager.prototype.add = function(e) {
	e.manager = this,
  this.timelines.push(e);
  return e;
},
/*NEW: Parse from JSON*/
  b5.TimelineManager.prototype.parse = function(e) {
  	var t = typeof e == "string" ? JSON.parse(e) : e;
  	s = function(c) {
  		for(var i=0;i<c.length;i++)c[i] = b5.Ease[c[i]];
  		return c;
  	};
  	for(var d=0;d<t.timelines.length;d++) {
  		var a = new b5.Timeline;
  		for(var i=0;i<t.timelines[d].anims.length;i++) {
  			var n = t.timelines[d].anims[i],
  			r = s(n.easing),
  			o = new b5.Animation(null, this.parent, n.property, n.frames, n.times, n.repeats, r);
	 			a.add(o);
  		}
  		a.pause();
  		this.add(a);
  	}
  	return this.timelines;
}, b5.TimelineManager.prototype.remove = function(e) {
  if (void 0 === e)return void(this.timelines = []);
  for (var o = this.timelines, a = o.length, n = 0;
    n < a;
    n++)if (o[n] === e)return void o.splice(n, 1)}, b5.TimelineManager.prototype.changeTarget = function(e) {
  for (var o = this.timelines, a = o.length, n = 0;
    n < a;
    n++)o[n].changeTarget(e)}, b5.TimelineManager.prototype.find = function(e) {
  for (var o = this.timelines, a = o.length, n = 0;
    n < a;
    n++)if (o[n].name === e)return o[n];
  return null
}, b5.TimelineManager.prototype.setRepeats = function(e) {
  for (var o = this.timelines, a = o.length, n = 0;
    n < a;
    n++)o[n].setRepeats(e)}, b5.TimelineManager.prototype.pause = function() {
  for (var e = this.timelines.length, o = 0;
    o < e;
    o++)this.timelines[o].pause()}, b5.TimelineManager.prototype.play = function() {
  for (var e = this.timelines.length, o = 0;
    o < e;
    o++)this.timelines[o].play()}, b5.TimelineManager.prototype.restart = function() {
  for (var e = this.timelines.length, o = 0;
    o < e;
    o++)this.timelines[o].restart()}, b5.TimelineManager.prototype.print = function() {
  for (var e = this.timelines.length, o = 0;
    o < e;
    o++)console.log(this.timelines[o])}, b5.TimelineManager.prototype.update = function(e) {
  var o = this.timelines.length;
  if (0 === o)return!1;
  this.playing=!1;
  for (var a = o-1;
    0 <= a;
    a--)this.timelines[a].update(e) && (this.playing=!0);
  return this.playing
}, 'use strict', b5.ActionsList = function(e, t) {
  this.repeats_left = t,
  this.manager = null,
  this.name = e,
  this.repeat = t,
  this.actions = [],
  this.current = 0,
  this.destroy=!0,
  this.playing=!1
}, b5.ActionsList.prototype.add = function(e) {
  return this.actions.push(e),
  e.parent = this,
  e
}, b5.ActionsList.prototype.remove = function(e) {
  for (var o = this.actions, a = o.length, n = 0;
    n < a;
    n++)if (o[n] === e)return void o.splice(n, 1)}, b5.ActionsList.prototype.execute = function() {
  if (!this.playing)return!0;
  var e = this.actions,
  t = e.length;
  if (0 === t)return!1;
  var o = e[this.current];
  return!0 !== o.initialised && (void 0 !== o.onInit && o.onInit(), o.initialised=!0),
  void 0 !== o.onTick && o.onTick() || (o.initialised=!1, this.current++, !(this.current >= t && (this.current = 0, 0 !== this.repeat && (this.repeats_left--, 0 >= this.repeats_left)))) || (this.playing=!1, this.repeats_left = this.repeat, !1)}, b5.ActionsList.prototype.pause = function() {
  this.playing=!1
}, b5.ActionsList.prototype.play = function() {
  this.playing=!0
}, b5.ActionsList.prototype.restart = function() {
  for (var e = this.actions, o = e.length, a = 0;
    a < o;
    a++)e[a].initialised=!1;
  this.repeats_left = this.repeat,
  this.play()}, b5.ActionsListManager = function() {
  this.actions = []}, b5.ActionsListManager.prototype.add = function(e) {
  return this.actions.push(e),
  e.manager = this,
  e
}, b5.ActionsListManager.prototype.remove = function(e) {
  for (var o = this.actions, a = o.length, n = 0;
    n < a;
    n++)if (o[n] === e)return void o.splice(n, 1)}, b5.ActionsListManager.prototype.find = function(e) {
  for (var o = this.actions, a = o.length, n = 0;
    n < a;
    n++)if (o[n].name === e)return o[n];
  return null
}, b5.ActionsListManager.prototype.execute = function() {
  for (var e = [], o = this.actions, a = o.length, n = 0;
    n < a;
    n++)o[n].execute() || o[n].destroy && e.push(o[n]);
  for (var n = 0;
    n < e.length;
    n++)this.remove(e[n])}, 'use strict', b5.EventsManager = function() {
  this.events = [], this.removals = []}, b5.EventsManager.prototype.on = function(e, t, o) {
    var a = {
	    name: e, func: t, data: o
    }
  	this.events.push(a);
  	return a},
  b5.EventsManager.prototype.once = function(e, t, o) {
  	var a = {
	    name: e, func: t, data: o, once: !0
    }
  	this.events.push(a);
  	return a},
  b5.EventsManager.prototype.off = function(e) {
  	var t = this.events,
  	o = t.indexOf(e);
  	o !== -1 && t.splice(o,1);
  },
  b5.EventsManager.prototype.remove = function(e) {
  var t = this.events,
  o = t.length;
  this.events = t.filter(function(t) {
    return t.name !== e
  })}, b5.EventsManager.prototype.clear = function() {
  this.events = []},
  b5.EventsManager.prototype.clean = function() {
  	for(var i = 0, e = this.removals; i < e.length; i++) this.off(e[i]);
  	this.removals = [];
  },
  b5.EventsManager.prototype.dispatch = function(e,t) {
  for (var o = this.events, a = o.length, n = 0; n < a; n++)if (o[n] && o[n].name === e)o[n].once && this.removals.push(o[n]), void o[n].func(t);
  this.clean();
  }, 
  'use strict', 
 b5.Task = function(e, t, o, a, n) {
  this.name = e,
  this.func = a,
  this.data = n,
  this.state = b5.Task.Stopped,
  this.running_time = 0,
  this.delay = t,
  this.loops = 0,
  this.repeat = o,
  this.last_time = 0,
  this.wait = 0,
  this.pause = function() {
    this.state = b5.Task.Paused
  },
  this.play = function() {
    this.state = b5.Task.Running
  },
  this.stop = function() {
    this.state = b5.Task.Stopped
  },
  0 === t?this.play(): this.state = b5.Task.Dormant
}, b5.Task.Dormant = 0, b5.Task.Running = 1, b5.Task.Paused = 2, b5.Task.Stopped = 3, b5.TasksQ = function() {
  this.q=!0,
  this.tasks = []}, b5.TasksQ.prototype.add = function(e, t, o, a, n) {
  var r = new b5.Task(e, t, o, a, n);
  return this.tasks.push(r),
  r
}, b5.TasksQ.prototype.removeAt = function(e) {
  this.tasks.splice(e, 1)}, b5.TasksQ.prototype.remove = function(e) {
  for (var o = this.tasks, a = o.length, n = 0;
    n < a;
    n++)if (o[n].name === e)return void o.splice(n, 1)}, b5.TasksQ.prototype.removeTask = function(e) {
  for (var o = this.tasks, a = o.length, n = 0;
    n < a;
    n++)if (o[n] === e)return void o.splice(n, 1)}, b5.TasksQ.prototype.find = function(e) {
  for (var o = this.tasks, a = o.length, n = 0;
    n < a;
    n++)if (o[n].name === e)return o[n];
  return null
}, b5.TasksQ.prototype.clear = function() {
  this.tasks = []}, b5.TasksQ.prototype.execute = function() {
  var e = b5.app.dt,
  t = this.tasks,
  o = t.length;
  if (0 === o)return 0;
  var a = t[0];
  if (a.state === b5.Task.Dormant && (a.running_time += e, a.running_time >= a.delay && (a.play(), a.running_time -= e)), a.state === b5.Task.Running) {
    var n=!0;
    0 !== a.wait && (a.last_time += e, a.last_time >= a.wait?a.last_time -= a.wait: n=!1),
    !0 == n && (a.func(a), a.running_time += e, 0 > a.delay?a.stop(): 0 < a.repeat && (a.loops++, a.loops >= a.repeat && (a.stop(), void 0 !== a.onComplete && a.onComplete(this), this.removeTask(a))))}return t.length
}, b5.TasksManager = function() {
  this.tasks = []}, b5.TasksManager.prototype.add = function(e, t, o, a, n) {
  var r = new b5.Task(e, t, o, a, n);
  return this.tasks.push(r),
  r
}, b5.TasksManager.prototype.removeAt = function(e) {
  this.tasks.splice(e, 1)}, b5.TasksManager.prototype.remove = function(e) {
  for (var o = this.tasks, a = o.length, n = 0;
    n < a;
    n++)if (o[n].name === e)return void o.splice(n, 1)}, b5.TasksManager.prototype.removeTask = function(e) {
  for (var o = this.tasks, a = o.length, n = 0;
    n < a;
    n++)if (o[n] === e)return void o.splice(n, 1)}, b5.TasksManager.prototype.find = function(e) {
  for (var o = this.tasks, a = o.length, n = 0;
    n < a;
    n++)if (o[n].name === e)return o[n];
  return null
}, b5.TasksManager.prototype.clear = function() {
  this.tasks = []}, b5.TasksManager.prototype.execute = function() {
  for (var e = [], o = b5.app.dt, a = this.tasks, n = a.length, r = 0, i;
    r < n;
    r++)if (i = a[r], i && i.q)0 === i.execute() && (void 0 !== i.onComplete && i.onComplete(this), e.push(i));
  else if (i && i.state === b5.Task.Dormant && (i.running_time += o, i.running_time >= i.delay && (i.play(), i.running_time -= o)), i && i.state === b5.Task.Running) {
    var s=!0;
    0 !== i.wait && (i.last_time += o, i.last_time >= i.wait?i.last_time -= i.wait: s=!1),
    s && (i.func(i), i.running_time += o, 0 > i.delay?i.stop(): 0 < i.repeat && (i.loops++, i.loops >= i.repeat && (e.push(i), i.stop(), void 0 !== i.onComplete && i.onComplete(this))))}for (var r = 0;
    r < e.length;
    r++)this.removeTask(e[r])
  }, 
  'use strict',
  /*NEW, standalone tweener, animate any property!*/
  b5.Tweener = function(object,property,sub_property,from,to,time,easing,delay,actor){//obj,prop,sub_prop,from,to,in,ease,delay
	var o = 0, e = null, n = {onfinish:null,onTick:null,onstart:null,position:0},
	tg = actor ? actor : b5.app;
	n.start = function() {
	tg.setTimeout(()=>{
		sub_property == void 0 ? object[property] = from : object[property][sub_property] = from;
		o = 0;
		tg.clearInterval(e);
		e = tg.setInterval(task => {
			var a = b5.Ease.easingFuncs[easing||b5.Ease.linear](n.position=o/time, n.steps||0);
				sub_property == void 0 ? object[property] = from+(a*(to-from)) : object[property][sub_property] = from+(a*(to-from));
			o += app.dt;
			n.onTick && n.onTick(a);
			o >= time && (
				sub_property == void 0 ? object[property] = to : object[property][sub_property] = to,
				tg.clearInterval(task.name),
				n.onfinish && n.onfinish()
			);
		},0);
	  n.cancel = function() {tg.clearInterval(e)},
	  n.onstart && n.onstart();
	},delay||0);
	};
	return n;
},
  'use strict', b5.Actor = function(e) {
  this.type = b5.Actor.Type_Image,
  this.scene = null,
  this.parent = null,
  this.actors = [],
  this.removals = [],
  this.joints = [],
  this.timelines = new b5.TimelineManager(this),
  b5.ActionsListManager !== void 0 && (this.actions = new b5.ActionsListManager),
  this.tasks = new b5.TasksManager,
  //PIXI
  this.container = new PIXI.Container,
  this.container.id = "actor_container",
  b5.app && (this.sprite = new PIXI.Sprite, //For b5.Actor
	 this.sprite.zIndex = -1
	);
	var e = this;
  this.container.onPreDraw = function() { e.onPreDraw && e.onPreDraw() },
  this.frame_count = 0,
  this.accum_scale_x = 1,
  this.accum_scale_y = 1,
  this.accum_opacity = 1,
  this.body = null,
  this.transform_dirty=!0,
  this.layout_dirty=!0,
  this.touch_et = null,
  this.touching=!1,
  this.hovering=!1,
  this.touchmove=!1,
  this.touch_pos = { x: 0, y: 0 },
  this.touch_drag_x = 0,
  this.touch_drag_y = 0,
  this.layer = 0,
  this.name = '',
  this.tag = '',
  this.tags = [],
  this.A_overlaps = [],
  this.id=-1,
  this.active=!0,
  this.paused=!1,
  this.visible=!0,
  this._draw=!0,
  this.touchable=!1,
  this.hit=!0,
  this.touch_index = 0,
  this.x = 0,
  this.y = 0,
  this.x2 = 0,
  this.y2 = 0,
  this.w = 0,
  this.h = 0,
  this.ox = 0,
  this.oy = 0,
  this.absPos = {x: 0,y: 0},
  this.cull = !0,
  this.offscreen = !1,
  this.destroyed = !1,
  //New (skew)
  this.skew_x = 0,
  this.skew_y = 0,
  //Userdata
  this.data = {},
  this.ignore_atlas_size=!1,
  this.center_atlas=!0,
  this.absolute_origin=!0,
  this.rotation = 0,
  this.scale_x = 1,
  this.scale_y = 1,
  this.scale = 1,
  this.depth = 0,
  this.opacity = 1,
  this.use_parent_opacity=!0,
  this.current_frame = 0,
  this.prev_frame = 0,
  this.frame_speed = 0,
  this.anim_frames = null,
  //Extra
  this.current_anim="",
  this.pending_anim="",
  this.current_bitmap = 0,
  this.anim_ended = !1,
  this.frames_repeat=!0,
  this.bitmap = null,
  this.atlas = null,
  this.vr = 0,
  this.vx = 0,
  this.vy = 0,
  this.vd = 0,
  this.vr_damping = 1,
  this.vx_damping = 1,
  this.vy_damping = 1,
  this.vd_damping = 1,
  this.wrap_position=!1,
  this.dock_x = 0,
  this.dock_y = 0,
  this.dock_screen=!1,
  this.margin = [0,
    0,
    0,
    0],
  this.bubbling=!1,
  this.clip_children=!1,
  this.clip_margin = [0,
    0,
    0,
    0],
  this.clip_shape = null,
  this.orphaned=!1,
  this.virtual=!1,
  this.stacking = 0,
  this.clip_virtual=!0,
  this._tint_colour = "#ffffff",
  this._composite_op = 'source-over',
  this.round_pixels=!0,
  this.scale_method = 0,
  this.fit = b5.Actor.FitNone,
  !0 === e && this.makeVirtual()
  }, b5.Actor.FitNone = 0, b5.Actor.FitPP = 1, b5.Actor.FitX = 2, b5.Actor.FitY = 3, b5.Actor.FitBest = 4, b5.Actor.FitAverage = 5, b5.Actor.FitGreatest = 6, b5.Actor.FitSmallest = 7, b5.Actor.FitSize = 8, b5.Actor.FitBest2 = 9, b5.Actor.Dock_None = 0, b5.Actor.Dock_Top = 1, b5.Actor.Dock_Bottom = 2, b5.Actor.Dock_Middle = 3, b5.Actor.Dock_Left = 1, b5.Actor.Dock_Right = 2, b5.Actor.Dock_Centre = 3, b5.Actor.Type_Image = 0, b5.Actor.Type_Label = 1, b5.Actor.Type_Rect = 2, b5.Actor.Type_Arc = 3, b5.Actor.Type_Polygon = 4, b5.Actor.Type_Particle = 5, b5.Actor.Type_Map = 6, b5.Actor.Stack_None = 0, b5.Actor.Stack_H = 1, b5.Actor.Stack_V = 2,
  Object.defineProperties(b5.Actor.prototype, {
  	composite_op: {
  		get: function() {return this._composite_op},
  		set: function(e) {
  			this._composite_op = e,
  			(this.sprite || this.graphics || this.pixiObj || {}).blendMode = b5.PixiDisplay.getBlendMode(e);
  		},
  		enumerable: true
  	},
  	tint_colour: {
  		get: function() {return this._tint_colour},
  		set: function(e) {
  		  this._tint_colour = e,
  		  (this.sprite || this.graphics || this.pixiObj || {}).tint = PIXI.utils.string2hex(e);
  	  },
  	  enumerable: true
  	},
  	_x: {
  		get: function() {return this.x},
  		set: function(e) {this.x !== e && (this.x = e, this.dirty())},
  		enumerable: true
  	},
  	_y: {
  		get: function() {return this.y},
  		set: function(e) {this.y !== e && (this.y = e, this.dirty())},
  		enumerable: true
  	},
  	_x2: {
  		get: function() {return this.x2},
  		set: function(e) {this.x2 !== e && (this.x2 = e, this.dirty())},
  		enumerable: true
  	},
  	_y2: {
  		get: function() {return this.y2},
  		set: function(e) {this.y2  !== e && (this.y2 = e, this.dirty())},
  		enumerable: true
  	},
  	_ox: {
  		get: function() {return this.ox},
  		set: function(e) {this.ox !== e && (this.ox = e, this.dirty())},
  		enumerable: true
  	},
  	_oy: {
  		get: function() {return this.oy},
  		set: function(e) {this.oy !== e && (this.oy = e, this.dirty())},
  		enumerable: true
  	},
  	_rotation: {
  		get: function() {return this.rotation},
  		set: function(e) {this.rotation !== e && (this.rotation = e, this.dirty())},
  		enumerable: true
  	},
  	_scale_x: {
  		get: function() {return this.scale_x},
  		set: function(e) {this.scale_x !== e && (this.scale_x = e, this.dirty())},
  		enumerable: true
  	},
  	_scale_y: {
  		get: function() {return this.scale_y},
  		set: function(e) {this.scale_y !== e && (this.scale_y = e, this.dirty())},
  		enumerable: true
  	},
  	_scale: {
  		get: function() {return this.scale},
  		set: function(e) {this.scale !== e && (this.scale = this.scale_x = this.scale_y = e, this.dirty())},
  		enumerable: true
  	},
  	_depth: {
  		get: function() {return this.depth},
  		set: function(e) {this.depth !== e && (this.depth = e, this.dirty())},
  		enumerable: true
  	},
  	_layer: {
  		get: function() {return this.layer},
  		set: function(e) {this.layer !== e && (this.layer = e, this.dirty())},
  		enumerable: true
  	},
  	_av: {
  		set: function(e) {
    	  this.onAVChanged !== void 0 && this.onAVChanged(e),
      	this.visible = e,
  	    this.active = e,
        this.setBodyActive(this.active)
  		}
  	}
  }),
b5.Actor.prototype.setBodyActive = function(e) {
  null !== this.body && this.body.SetActive(e);
  for (var o = this.actors, a = o.length, n = 0;
    n < a;
    n++)o[n].setBodyActive(e)}, b5.Actor.prototype.setPosition = function(e, t, n) {
  if ((this.x !== e || this.y !== t) && (this.x = e, this.y = t,this.onPositionSet && this.onPositionSet(e,t), this.dirty(), null !== this.body)) {
    var o = Box2D.Common.Math.b2Vec2,
    a = this.scene.world_scale;
    !n && this.body.SetPosition(new o(e/a, t/a));
  }}, b5.Actor.prototype.setPositionPhysics = function(e, t) {
  this.setPosition(e, t)}, b5.Actor.prototype.setSize = function(e, t) {
  	if(this.w !== e || this.h !== t) {
  		(this.w = e, this.h = t, this.dirty(), this.virtual && (this.layout_dirty=!0, this.Virtual_updateLayout(!0)));
  		if(this.body !== null) {
  			var o = this.getFixtures()[0].m_shape.m_vertices,
  			a = (e/2)/this.scene.world_scale, n = (t/2)/this.scene.world_scale;
  			for(var i=0;i<4;i++) switch(i) {
  				case 0: o[i].x = -a; o[i].y = -n; break;
  				case 1: o[i].x = a; o[i].y = -n; break;
  				case 2: o[i].x = a; o[i].y = n; break;
  				case 3: o[i].x = -a; o[i].y = n; break;
  			}
  		}
  	}
  }, 
  b5.Actor.prototype.setOrigin = function(e, t) {
  	if(this.ox === e && this.oy === t) return;
  	this.ox = (-this.w/2) * (e === "center" ? 1 : e === "left" ? 0 : e === "right" ? 2 : e);
  	this.oy = (-this.h/2) * (t === "center" ? 1 : t === "top" ? 0 : t === "bottom" ? 2 : t);
  	this.dirty();
  }, b5.Actor.prototype.setScale = function(e, t) {(this.scale_x !== e || this.scale_y !== t) && (this.scale_x = e, this.scale_y = t, this.dirty())}, 
  //NEW 
  b5.Actor.prototype.setSkewing = function(e, t) {(this.skew_x !== e || this.skew_y !== t) && (this.skew_x = e, this.skew_y = t, this.dirty())},
  
  b5.Actor.prototype.setRotation = function(e) {
  this.rotation !== e && (this.rotation = e, this.dirty(), null !== this.body && this.body.SetAngle(e))}, b5.Actor.prototype.setRotationPhysics = function(e) {
  this.setRotation(e)}, b5.Actor.prototype.setDepth = function(e) {
  this.depth !== e && (this.depth = e, this.dirty())}, b5.Actor.prototype.playAnim = function(e, t) {
  if (this.active || (this._av=!0), null !== this.atlas) {
    var o = this.atlas.getAnim(e);
    this.current_anim = e,
    this.current_frame = 0, 
    this.current_bitmap = 0,
    this.anim_ended = !1,
    null == o?(this.frames_repeat = t, this.pending_anim = e, b5.app.debug && console.log('Warning: Could not find brush anim\''+e+'\' for actor \''+this.name+'\'')):
    (this.anim_frames = o.indices, 
    this.frame_speed = o.speed, 
    this.frames_repeat = t, 
    this.dirty()),
    this.onAnimStart && this.onAnimStart(e),
    t === false && (this.onAnimEnd = null)
  } else this.pending_anim = e, this.frames_repeat = t;
 }, 
 b5.Actor.prototype.clearAnim = function() {
 	this.pending_anim = "";
 	this.anim_frames = null;
 	this.current_anim = "";
 	this.current_frame = 0;
 	this.current_bitmap = 0;
 	this.frame_speed = 0;
 },
 b5.Actor.prototype.playAnimWithEnd = function(e, t) {
	this.onAnimEnd = function() {
		this.onAnimEnd = null;
		t && t(this);
	};
	this.playAnim(e);
},
b5.Actor.prototype.playTimeline = function(e, o) {
  var a = this.timelines.find(e);
  if (null !== a && (!this.active && (this._av=!0), a.restart(), a.update(0)), o)for (var n = this.actors, r = n.length, i = 0;
    i < r;
    i++)n[i].playTimeline(e, o);
  return a
}, 
b5.Actor.prototype.getCurrentFrame = function() {
	return this.anim_frames === null ? this.current_frame : this.anim_frames[Math.round(this.current_frame)];
},
b5.Actor.prototype.TweenTo = function(e, t, o, a, n, r) {
  !0 === n && this.timelines.remove();
  var i = new b5.Timeline(this, e, [this[e], t], [0, o], 1, [a || 0]);
  return void 0 !== r && i.setDelay(r),
  this.timelines.add(i),
  i
}, b5.Actor.prototype.TweenToWithEnd = function(e, t, o, a, n, r, i) {
  var s = this.TweenTo(e, t, o, a, n, r);
  return null != i && (s.anims[0].onEnd =()=>{i(this)}),
  s
}, b5.Actor.prototype.TweenToMany = function(e) {
  for (var o = 0;
    o < e.length;
    o++) {
    var a = e[o],
    n=!(0 !== o) && a.wipe;
    this.TweenToWithEnd(a.property, a.to, a.duration, a.easing, n, a.delay, a.onend)}
}, b5.Actor.prototype.TweenFrom = function(e, t, o, a, n) {
  !0 === n && this.timelines.remove();
  var r = new b5.Timeline(this, e, [t, this[e]], [0, o], 1, [a || 0]);
  return this.timelines.add(r),
  r
}, b5.Actor.prototype.TweenFromWithEnd = function(e, t, o, a, n, r) {
  var i = this.TweenFrom(e, t, o, a, n);
  return null != r && (i.anims[0].onEnd = r),
  i
}, b5.Actor.prototype.addTask = function(e, t, o, a, n) {
  return this.tasks.add(e, t, o, a, n)}, b5.Actor.prototype.removeTask = function(e) {
  this.tasks.remove(e)
}, /*New*/
  b5.Actor.prototype.setTimeout = function(e,t) {
  	var o = this.name+'.timeout-'+b5.app.now;
  	this.addTask(o, t, 1, e, this);
  	return o
}, 
b5.Actor.prototype.clearTimeout = b5.Actor.prototype.removeTask,
b5.Actor.prototype.setInterval = function(e,t) {
	var o = this.name+'.interval-'+b5.app.now;
	this.addTask(o, 0, Infinity, e, this).wait = t;
	return o
},
b5.Actor.prototype.clearInterval = b5.Actor.prototype.removeTask,
b5.Actor.prototype.release = function(t) {
  for (var e = 0;
    e < this.actors.length;
    e++)this.actors[e].release();
  this.onDestroy !== void 0 && this.onDestroy(),
  this.releaseJoints(),
  this.releaseBody(), t && this.destroy()}, b5.Actor.prototype.destroy = function() {
  null === this.parent?null !== this.scene && this.scene.removeActor(this): this.parent.removeActor(this),
  this.container.destroy(),
  this.draw = ()=>{},
  delete this.onTick,
  this.active = !1,
  this.destroyed = !0,
  this.graphics = this.sprite = this.atlasTex = null;
  }, b5.Actor.prototype.changeParent = function(e) {
  var o = null === this.parent?this.scene.actors: this.parent.actors;
  for (var a = o.length, n = 0;
    n < a;
    n++)if (this === o[n]) {
    o.splice(n, 1),
    e.addActor(this);
    break
  }}, b5.Actor.prototype.addActor = function(e) {
  return null === this.scene && (this.scene = b5.app.focus_scene),
  this.actors.push(e),
  e.parent = this,
  e.scene = this.scene,
  e.onAdded && e.onAdded(this),
  this.container.addChild(e.container),
  this.is_primary && (e.first_parent = this),
  this.first_parent && (e.first_parent = this.first_parent),
  this.layout_dirty=!0,
  e.destroyed=!1,
  e
}, b5.Actor.prototype.removeActor = function(e) {
  this.removals.push(e),
  this.container.removeChild(e.container),
  this.layout_dirty=!0
}, b5.Actor.prototype.removeActorsWithTag = function(e) {
  for (var o = this.actors, a = o.length, n = 0, r = this.removals, i = 0;
    i < a;
    i++)o[i].tag === e && (r.push(o[i]), this.container.removeChild(o[i].container), n++);
  return this.layout_dirty=!0,
  n
}, b5.Actor.prototype.removeAllActors = function() {
  for (var e = this.actors, o = e.length, a = this.removals, n = 0;
    n < o;
    n++)a.push(e[n]);
  o > 0 && this.container.removeChildren(1);
  this.layout_dirty=!0
}, b5.Actor.prototype.sendDestroyed = function(e) {
	this.destroyed=e;
	for(var i=0,a=this.actors;i<a.length;i++) {
		a[i].destroyed=!0,
		a[i].sendDestroyed();
	}
}, b5.Actor.prototype.cleanupDestroyedActors = function() {
  var e = this.removals.length;
  if (0 < e)for (var o = this.removals, a = this.actors, n = a.length, r = 0, i;
    r < e;
    r++) {
    i = o[r];
    for (var c = 0;
      c < n;
      c++)if (i === a[c]) {
      i.release(),
      i.sendDestroyed(!0),
      a.splice(c, 1),
      n--;
      break
    }}this.removals = []}, b5.Actor.prototype.findActor = function(e, o) {
  o === void 0 && (o=!1);
  for (var a = this.actors, n = a.length, r = 0;
    r < n;
    r++) {
    if (a[r].name === e)return a[r];
    if (o) {
      var i = a[r].findActor(e, o);
      if (null !== i)return i
    }}return null
}, b5.Actor.prototype.findActorById = function(e, o) {
  o === void 0 && (o=!1);
  for (var a = this.actors, n = a.length, r = 0;
    r < n;
    r++) {
    if (a[r].id === e)return a[r];
    if (o) {
      var i = a[r].findActorById(e, o);
      if (null !== i)return i
    }}return null
}, 
b5.Actor.prototype.findActorsByTagName = function(e, t) {
	t === void 0 && (t!=1);
  for (var a = this.actors, n = a.length, r = 0, o = [];
    r < n;
    r++){
    if (a[r].tag === e) o.push(a[r]);
    if(t) {
    	var s = a[r]?a[r].findActorsByTagName(e,t):null;
    	if(s) for(var c=0;c<s.length;c++)o.push(s[c]);
    }}
    return o;
},
b5.Actor.prototype.findActorsWithTagsName = function(e, t) {
	t === void 0 && (t!=1);
  for (var a = this.actors, n = a.length, r = 0, o = [];
    r < n;
    r++){
    if (a[r].tags.indexOf(e) !== -1) o.push(a[r]);
    if(t) {
    	var s = a[r]?a[r].findActorsWithTagsName(e,t):null;
    	if(s) for(var c=0;c<s.length;c++)o.push(s[c]);
    }}
    return o;
},
b5.Actor.prototype.findFirstParent = function() {
  for (var e = this;
    null !== e;
  ) {
    if (null === e.parent)return e;
    e = e.parent
  }return null
}, b5.Actor.prototype.updateParentTransforms = function() {
  for (var e = [], o = this; null !== o;)e.push(o), o = o.parent;
  for (var a = e.length-1;
    0 <= a;
    a--)e[a].dirty()
}, 
  b5.Actor.prototype.getShapeType = function() {
  	switch(this.type) {
  		case b5.Actor.Type_Rect:
  		case b5.Actor.Type_Image:
  			return b5.Shape.TypeBox;
  		case b5.Actor.Type_Arc:
  			return b5.Shape.TypeCircle;
  		case b5.Actor.Type_Map:
  			return b5.Shape.TypeBox;
  		case b5.Actor.Type_Polygon:
  			return b5.Shape.TypePolygon;
  	}
}, b5.Actor.prototype.getSlot = function() {
  var e = null === this.parent?this.scene.actors: this.parent.actors;
  for (var o = e.length, a = 0;
    a < o;
    a++)if (e[a] === this)return a
}, b5.Actor.prototype.moveToSlot = function(e) {
  var t = null === this.parent?this.scene.actors: this.parent.actors;
  var o = this.getSlot();
  o === e || (t.splice(e, 0, this), e < o && o++, t.splice(o, 1))}, b5.Actor.prototype.bringToFront = function() {
  var e = null === this.parent?this.scene: this.parent,
  t = e.container.children;
  e.container.swapChildren(t[t.length-1],this.container);
  }, b5.Actor.prototype.sendToBack = function() {
  var e = null === this.parent?this.scene: this.parent;
  t = e.container.children;
  e.container.swapChildren(t[0],this.container);
  }, b5.Actor.prototype.onBeginTouchBase = function(e,t) {
  this.touching=!0,
  this.bubbling && null !== this.parent && this.parent.onBeginTouchBase(e,t),
  this.onBeginTouch !== void 0 && this.onBeginTouch(e,t)}, b5.Actor.prototype.onEndTouchBase = function(e,t) {
  if (this.touching && void 0 !== this.onTapped && (this.onTapped(e,t), void 0 !== this.onDblTapped))if (null === this.touch_et)this.touch_et = Date.now();
  else {
    var t = Date.now(),
    o = t-this.touch_et;
    500 > o && this.onDblTapped(e),
    this.touch_et = t
  }this.touching=!1,
  this.touchmove=!1,
  this.bubbling && null !== this.parent && this.parent.onEndTouchBase(e,t),
  this.onEndTouch !== void 0 && this.onEndTouch(e,t)}, b5.Actor.prototype.onMoveTouchBase = function(e,p,a) {
  this.touching && (this.touchmove=!0),
  this.bubbling && null !== this.parent && this.parent.onMoveTouchBase(e,p,a),
  this.virtual && this.Virtual_onMoveTouch(e,p,a),
  this.onMoveTouch !== void 0 && this.onMoveTouch(e,p,a)}, b5.Actor.prototype.releaseBody = function() {
  null !== this.body && (this.scene.world.DestroyBody(this.body), this.body = null)}, b5.Actor.prototype.releaseJoints = function() {
  if (null !== this.body) {
    for (var e = 0;
      e < this.joints.length;
      e++)this.scene.world.DestroyJoint(this.joints[e]);
    this.joints = []
  }}, b5.Actor.prototype.initBody = function(e, t, o) {
  if (!this.scene.app.box2d)return null;
  var a = this.scene,
  n = new Box2D.Dynamics.b2BodyDef,
  r = a.world_scale;
  return n.type = 'static' === e?Box2D.Dynamics.b2Body.b2_staticBody:
  								'kinematic' === e?Box2D.Dynamics.b2Body.b2_kinematicBody: 
  								Box2D.Dynamics.b2Body.b2_dynamicBody,
  n.position.Set(this.x/r, this.y/r),
  n.angle = this.rotation,
  n.fixedRotation = t,
  n.bullet = o,
  this._bodyInitType = e,
  this.body = a.world.CreateBody(n),
  'collider' === e && (this.body.m_gravityScale.x=this.body.m_gravityScale.y=0),
  this.body.SetUserData(this),
  this.body
}, b5.Actor.prototype.addFixture = function(e) {
  if (null === this.body)return null;
  var o = e,
  a = e,
  n;
  this.body._pr = e.width;
  void 0 !== e.shape && (o = e.shape),
  void 0 !== e.material && (a = e.material);
  var r = this.scene.world_scale,
  i = this.scale_x,
  c = this.scale_y,
  d = Box2D.Common.Math.b2Vec2;
  if (o.type === b5.Shape.TypeBox) {
    n = new Box2D.Dynamics.b2FixtureDef,
    n.shape = new Box2D.Collision.Shapes.b2PolygonShape;
    var p = o.width/(2*r)*i,
    l = o.height/(2*r)*c;
    n.shape.SetAsOrientedBox(p, l, new d(o.width/r*this.ox, o.height/r*this.oy), 0)} else if (o.type === b5.Shape.TypeCircle)n = new Box2D.Dynamics.b2FixtureDef,
  n.shape = new Box2D.Collision.Shapes.b2CircleShape(o.width/r*i);
  else if (o.type === b5.Shape.TypePolygon) {
    if (void 0 !== o.convexVertices && 0 < o.convexVertices.length) {
      for (var y = [], _ = o.convexVertices.length, u = 0;
        u < _;
        u++) {
        n = new Box2D.Dynamics.b2FixtureDef,
        n.shape = new Box2D.Collision.Shapes.b2PolygonShape;
        for (var h = o.convexVertices[u], g = [], m = h.length, f = 0;
          f < m;
          f += 2)g.push({
            x: h[f]/r*i, y: h[f+1]/r*c
          });
        n.shape.SetAsArray(g, g.length),
        void 0 !== a.density && (n.density = a.density),
        void 0 !== a.friction && (n.friction = a.friction),
        void 0 !== a.restitution && (n.restitution = a.restitution),
        void 0 !== e.is_sensor && (n.isSensor = e.is_sensor),
        void 0 !== e.collision_category && (n.filter.categoryBits = e.collision_category),
        void 0 !== e.collision_mask && (n.filter.maskBits = e.collision_mask),
        void 0 !== e.collision_group && (n.filter.groupIndex = e.collision_group),
        y.push(this.body.CreateFixture(n))}return y
    }n = new Box2D.Dynamics.b2FixtureDef,
    n.shape = new Box2D.Collision.Shapes.b2PolygonShape;
    for (var h = o.vertices, g = [], m = h.length, f = 0;
      f < m;
      f += 2)g.push({
        x: h[f]/r*i, y: h[f+1]/r*c
      });
    n.shape.SetAsArray(g, g.length)}return void 0 !== a.density && (n.density = a.density),
  void 0 !== a.friction && (n.friction = a.friction),
  void 0 !== a.restitution && (n.restitution = a.restitution),
  void 0 !== a.is_sensor && (n.isSensor = a.is_sensor),
  void 0 !== e.collision_category && (n.filter.categoryBits = e.collision_category),
  void 0 !== e.collision_mask && (n.filter.maskBits = e.collision_mask),
  void 0 !== e.collision_group && (n.filter.groupIndex = e.collision_group),
  this.body.CreateFixture(n),
  this._fixture = e
}, 
b5.Actor.prototype.getFixtureSelf = function(e,t,o,a,n,r) {
	return {
		width: this.type === b5.Actor.Type_Arc ? this.radius:this.w,
		height: this.h,
		vertices: this.points,
		type: b5.Utils.GetActorPhysicsBodyByType(this.type),
		density: e || 1,
		friction: t || 1,
		restitution: o || 0,
		is_sensor: this._bodyInitType === 'collider' || a,
		collision_group: n,
		collision_mask: r
	};
},
b5.Actor.prototype.addFixtureSelf = function(e,t,o,a,n,r) {
	return this.addFixture(this.getFixtureSelf(e,t,o,a,n,r));
},
b5.Actor.prototype.getFixtures = function() {
	//Entry type object to array
	for(var e = this.body.GetFixtureList(), t = [];;) if(!e) return [];
	  else {
			t.push(e);
			if(e.m_next) e = e.m_next;
			else return t;
		}
},
b5.Actor.prototype.removeFixture = function(e) {
  if (null === this.body)return null;
  if(!e) for(var i = 0, t = this.getFixtures();i<t.length;i++)
    this.body.DestroyFixture(t[i]);
  else this.body.DestroyFixture( isNaN(e) ? e : this.getFixtures()[e]);
},
b5.Actor.prototype.setFixture = function(e,n) {
	this.removeFixture(n);
	var o = n!==void 0?this.getFixtures()[n]:e;
	if(e) for(var i in o) this._fixture[i] = o[i];
	this.addFixture(this._fixture);
},
b5.Actor.prototype.setBodyType = function(e) {
	if (null === this.body)return null;
	this.body.SetType('static' === e?Box2D.Dynamics.b2Body.b2_staticBody: 'kinematic' === e?Box2D.Dynamics.b2Body.b2_kinematicBody: Box2D.Dynamics.b2Body.b2_dynamicBody);
},
b5.Actor.prototype.weldBodyTo = function(e,t) {
	if(this.body !== null)return this.addJoint({
		type: "weld",
		actor_b: e,
		anchor_a: {x:0,y:0},
		anchor_b: {x:0,y:0},
		self_collide: !!t
	});
},
b5.Actor.prototype.disableCollision = function(e) {
	for(var i = 0, t = ""; i < this.joints.length; i++)
		if(t = this.joints[i].GetUserData(), t === this.name+"-NoCollisionJoint-"+e.name) return !1;

	this.addJoint({
		type: "prismatic",
		actor_b: e,
		anchor_a: {x: 0, y: 0},
		anchor_b: {x: 0, y: 0},
		self_collide: false,
  	axis: {x: 0, y: 0},
  	data: this.name+"-NoCollisionJoint-"+e.name
	});
	return !0;
},
b5.Actor.prototype.enableCollision = function(e) {
	for(var i = 0, t = ""; i < this.joints.length; i++)
		if(t = this.joints[i].GetUserData(), t === this.name+"-NoCollisionJoint-"+e.name) {
			this.removeJoint(this.joints[i]);
			return !0;
		}
	return !1;
},
b5.Actor.prototype.setPhysicsLayers = function(cat,ly,fi) {
 	if(!this.body) return;
  	
 	var f = this.getFixtures()[fi || 0],
 	g = b5.Utils.CollisionFilter.FilterData,
 	h = b5.Utils.GetCollisionLayers;
  	
 	g.maskBits = !ly ? 65535 : h(ly);
 	cat !== null && (g.categoryBits = h([cat||0]));
  	
 	f.SetFilterData(g);
},
b5.Actor.prototype.addJoint = function(e) {
  var t = Math.PI;
  if (null === this.body)return null;
  var o = this.scene,
  a = o.world,
  n = o.world_scale,
  r = Box2D.Common.Math.b2Vec2,
  i = this.body,
  s = e.actor_b.body,
  c = i.GetWorldCenter(),
  d = s.GetWorldCenter(),
  p = new r(c.x, c.y),
  l;
  p.x += e.anchor_a.x/n,
  p.y += e.anchor_a.y/n;
  var y = new r(d.x, d.y);
  if (y.x += e.anchor_b.x/n, y.y += e.anchor_b.y/n, 'weld' === e.type)l = new Box2D.Dynamics.Joints.b2WeldJointDef,
  l.Initialize(i, s, p),
  l.collideConnected = e.self_collide;
  else if ('distance' === e.type)l = new Box2D.Dynamics.Joints.b2DistanceJointDef,
  l.Initialize(i, s, p, y),
  l.collideConnected = e.self_collide,
  l.frequencyHz = e.frequency,
  l.dampingRatio = e.damping;
  else if ('revolute' === e.type)l = new Box2D.Dynamics.Joints.b2RevoluteJointDef,
  l.Initialize(i, s, p),
  l.collideConnected = e.self_collide,
  e.limit_joint && (l.enableLimit=!0, l.lowerAngle = e.lower_limit*(t/180), l.upperAngle = e.upper_limit*(t/180)),
  e.motor_enabled && (l.enableMotor=!0, l.motorSpeed = e.motor_speed, l.maxMotorTorque = e.max_motor_torque);
  else if ('prismatic' === e.type)l = new Box2D.Dynamics.Joints.b2PrismaticJointDef,
  l.Initialize(i, s, p, new r(e.axis.x, e.axis.y)),
  l.collideConnected = e.self_collide,
  e.limit_joint && (l.enableLimit=!0, l.lowerTranslation = e.lower_limit/n, l.upperTranslation = e.upper_limit/n),
  e.motor_enabled && (l.enableMotor=!0, l.motorSpeed = e.motor_speed, l.maxMotorForce = e.max_motor_force);
  else if ('pulley' === e.type) {
    var _ = new r(c.x, c.y);
    _.x += e.ground_a.x/n,
    _.y += e.ground_a.y/n;
    var u = new r(d.x, d.y);
    u.x += e.ground_b.x/n,
    u.y += e.ground_b.y/n,
    l = new Box2D.Dynamics.Joints.b2PulleyJointDef,
    l.Initialize(i, s, _, u, p, y, e.ratio),
    l.collideConnected = e.self_collide
  } else 'wheel' === e.type?(l = new Box2D.Dynamics.Joints.b2LineJointDef, l.Initialize(i, s, p, e.axis), l.collideConnected = e.self_collide, e.limit_joint && (l.enableLimit=!0, l.lowerTranslation = e.lower_limit/n, l.upperTranslation = e.upper_limit/n), e.motor_enabled && (l.enableMotor=!0, l.motorSpeed = e.motor_speed, l.maxMotorForce = e.max_motor_force)): 'mouse' === e.type && (l = new Box2D.Dynamics.Joints.b2MouseJointDef, l.collideConnected = e.self_collide, l.bodyA = i, l.bodyB = s, l.collideConnected = e.self_collide, l.maxForce = e.max_motor_force, l.dampingRatio = e.damping);
  var h = a.CreateJoint(l);
  h.SetUserData(e.data);
  return this.joints.push(h),
  h
}, b5.Actor.prototype.removeJoint = function(e) {
  for (var o = this.joints, a = o.length, n = 0;
    n < a;
    n++)if (o[n] === e)return this.scene.world.DestroyJoint(e),
  void o.splice(n, 1)}, b5.Actor.prototype.getScaleFromMethod = function(e) {
  var t = b5.app,
  o = t.global_scale,
  a = t.global_scale;
  if (!t.disable_dock_screen) {
    var n = e;
    if (n !== b5.Actor.FitNone) {
      var r = 1/t.canvas_scale,
      i = t.inner_width/t.design_width*r,
      s = t.inner_height/t.design_height*r;
      if (n === b5.Actor.FitBest)i > s?(o *= i, a *= i): (o *= s, a *= s);
      else if (n === b5.Actor.FitBest2)i < s?(o *= i, a *= i): (o *= s, a *= s);
      else if (n === b5.Actor.FitX)o *= i,
      a *= i;
      else if (n === b5.Actor.FitY)o *= s,
      a *= s;
      else if (n === b5.Actor.FitAverage) {
        var c = .5*(i+s);
        o *= c,
        a *= c
      } else if (n === b5.Actor.FitGreatest) {
        var c;
        c = t.inner_width > t.inner_height?i: s,
        o *= c,
        a *= c
      } else if (n === b5.Actor.FitSmallest) {
        var c;
        c = t.inner_width < t.inner_height?i: s,
        o *= c,
        a *= c
      } else n === b5.Actor.FitSize?(o *= i, a *= s): n === b5.Actor.FitPP && (o *= r, a *= r)}}return {
    x: o,
    y: a
  }},
  b5.Actor.prototype.drawChildren = function(e) {
  var o = this.actors.length,
  a = 0;
  if (0 < o) {
    var n = this.actors;
    for(var r = 0;r<n.length;r++) n[r].draw();
  }
  
  return a === o}, b5.Actor.prototype.draw = function() {
  
 	if((this.container.visible = this.visible && this.opacity && this._draw) || (this.atlas && (!this.w || !this.h))) {
  	this.accum_opacity = this.use_parent_opacity ? (this.parent || this.scene).accum_opacity * this.opacity : this.opacity;
    this.sprite.alpha = this.accum_opacity;
    
  	this.onDraw && this.onDraw();
  	//Sprite and atlas
  
  	var e = this.sprite,
  	i = null,
    s = this.atlas,
    q = this.bitmap;
    
    !this.atlasTex && (s||q) && (this.atlasTex = PIXI.Texture.WHITE.clone());
    
    null !== s && s.frames.length>0? (i = null === this.anim_frames?s.getFrame(0|this.current_frame): s.getFrame(this.anim_frames[0|this.current_frame]), !this.ignore_atlas_size && (this.w = i.w, this.h = i.h), (0|this.prev_frame) != (0|this.current_frame) && this.dirty(), this.prev_frame = this.current_frame)
    : !q && e.texture && (e.texture = null);
    
    void 0 === this.ow && (this.ow = this.w, this.oh = this.h);
    var p = this.ow/2,
    l = this.oh/2,
    m = q?q.resolution:1;
    this.current_bitmap = 0 || i !== null && i.bitmap;
    null === s? null !== q && null !== q.image && (
      e.texture = q.texture,
      e.width = this.w,
      e.height = this.h,
      e.x = e.y = 0
    ) : i && (
    	e.texture = this.atlasTex,
    	m = s.bitmaps[this.current_bitmap].resolution,
    	e.texture.setBaseTexture(s.bitmaps[this.current_bitmap].texture.baseTexture),
    	//Frame data
    	e.texture.setFrame(i.x*m,i.y*m,i.w*m,i.h*m),
    	e.x = -i.ox,
    	e.y = -i.oy,
    	e.scale.set(1/m,1/m),
    	this.ignore_atlas_size ? (
    		e.width = this.w,
    		e.height = this.h
    	) : (this.w = i.w, this.h = i.h)
    );
    !e.parent && this.container.addChild(e);
    
 	}
    
  if(this.transform_dirty && this.active) {
  	if (0 !== this.depth && 1 !== this.depth) {
      var y = 1/this.depth;
  	}else var y = 1;
  	
   	b5.app.display.transform(this.container,
  	  this.x+this.x2+(this.parent?!this.parent.ox?this.container.parent.pivot.x:(q?this.parent.w/2:this.atlas?this.parent.x-this.parent.ox:0):0),
  	  this.y+this.y2+(this.parent?!this.parent.oy?this.container.parent.pivot.y:(q?this.parent.h/2:0):0),
  	  this.w,
  	  this.h,
  	  this.rotation,
  	  this.scale_x*y,
  	  this.scale_y*y,
   	  (this.center_atlas||q?(this.w/2):p)-(this.ox),
  	  (this.center_atlas||q?(this.h/2):l)-(this.oy),
  	  this.skew_x,
  	  this.skew_y,
  	  void 0,
  	  this.layer
  	);
  	this.transform_dirty = !1;
  	}
  	this.container.visible && this.drawChildren(!1);
      
  },
 b5.Actor.prototype.baseUpdate = function(e) {
  if (this.active) {
  	var fx,
  	abs = (this.parent || this.scene).absPos;
  	
  	//Update physics body radius if arc 
  	this.body !== null && this.type === b5.Actor.Type_Arc && this.radius != this.body._pr && (fx=this.getFixtures()[0]) && (fx.m_shape.m_radius = this.radius/this.scene.world_scale, this.body._pr = this.radius);

  	this.absPos.x = (this.x + this.x2 + this.ox) + abs.x;
  	this.absPos.y = (this.y + this.y2 + this.oy) + abs.y;
  	
  	var o = this.first_parent || this.scene,
  	t = b5.AABB ? !b5.AABB.RectTestRect(
  		this.absPos.x * Math.abs(o.scale_x), this.absPos.y * Math.abs(o.scale_y),
  	  (this.w || this.radius*2)*Math.abs(this.scale_x),
  		(this.h || this.radius*2)*Math.abs(this.scale_y),
  		0, 0,
  		app.design_width, app.design_height
  	) : !1;
  	t !== this.offscreen && (
  		this.offscreen = t,
  		t ? this.onOutScreen && this.onOutScreen() : this.onInScreen && this.onInScreen()
  	);
  	
  	this._draw = (this.bitmap || this.atlas || this.graphics) && this.cull && ((this.w>0&&this.h>0)||this.radius>0)? !this.offscreen : !0;
  	
    void 0 !== this.onTick && this.onTick(e),
    this.timelines.update(e),
    void 0 !== this.actions && this.actions.execute(),
    this.tasks.execute(),
    this.virtual && this.Virtual_update(e);
    var o = this.scene;
    if (null !== this.atlas && this.atlas.frames.length>0) {
    	this.pending_anim != "" && Object.values(this.atlas.anims).length > 0 && this.current_anim == this.pending_anim && (this.playAnim(this.pending_anim, this.frames_repeat), this.pending_anim = "");
      this.current_frame += this.frame_speed*e;
      var a;
      if (a = null === this.anim_frames?this.atlas.frames.length: this.anim_frames.length, !this.frames_repeat)this.current_frame >= a?(this.current_frame = a-1, !this.anim_ended && (this.anim_ended = !0, null != this.onAnimEnd && this.onAnimEnd(this.current_anim))): 0 > this.current_frame && (null != this.onAnimEnd && this.onAnimEnd(), this.current_frame = 0);
      else if (0 > this.current_frame)for (;
        0 > this.current_frame;
      ){this.current_frame += a; void 0 !== this.onAnimRepeat && this.onAnimRepeat()}
      else for (;
        this.current_frame >= a;
      ){this.current_frame -= a; void 0 !== this.onAnimRepeat && this.onAnimRepeat()}
    }var n = this.x,
    r = this.y,
    i = this.body;
    if (null !== i) {
      var c = i.GetPosition(),
      d = o.world_scale;
      this.setRotation(i.GetAngle()),
      this.setPosition(c.x*d, c.y*d,!0);
      this.onBodyUpdate && this.onBodyUpdate();
    } else this.rotation += this.vr*e,
    this.vr *= this.vr_damping,
    this.x += this.vx*e,
    this.vx *= this.vx_damping,
    this.y += this.vy*e,
    this.vy *= this.vy_damping;
    //Fit
    if(0 !== this.fit) {
    	var B = this.scene || this.parent;
    	this.fit === b5.Actor.FitX ? this._scale = B.w/this.w:
    	this.fit === b5.Actor.FitY ? this._scale = B.h/this.h:
    	this.fit === b5.Actor.FitSize ? (this._scale_x = B.w/this.w, this._scale_y = B.h/this.h):
    	this.fit === b5.Actor.FitBest ? this._scale = ((this.w/this.h <= B.w/B.h) ? B.w/this.w : B.h/this.h):
    	null;
    }
    if (0 !== this.vd && (this.depth += this.vd*e, this.vd *= this.vd_damping), this.wrap_position) {
      var p = o.extents[0],
      l = p+o.extents[2],
      y = o.extents[1],
      _ = y+o.extents[3];
      this.x < p?this.x = l: this.x > l && (this.x = p),
      this.y < y?this.y = _: this.y > _ && (this.y = y)
    }
    if (null === this.parent||!this.parent.virtual)if (this.dock_screen&&!b5.app.disable_dock_screen) {
      var u = this.scale_method,
      h = 1,
      g = 1;
      if (0 !== u) {
        var m = this.getScaleFromMethod(u);
        h = m.x,
        g = m.y
      }if (0 !== this.dock_x) {
        var m = this.getScaleFromMethod(2);
        this.dock_x === b5.Actor.Dock_Left?this.x=-o.w*m.x/2+(this.w+2*this.margin[0])*this.scale_x*h/2: this.dock_x === b5.Actor.Dock_Right?this.x = o.w*m.x/2-(this.w+2*this.margin[1])*this.scale_x*h/2: this.dock_x === b5.Actor.Dock_Centre && (this.x = (this.w+2*this.margin[0])*this.scale_x*h/2)}if (0 !== this.dock_y) {
        var m = this.getScaleFromMethod(3);
        this.dock_y === b5.Actor.Dock_Top?this.y=-o.h*m.y/2+(this.h+2*this.margin[2])*this.scale_y*g/2: this.dock_y === b5.Actor.Dock_Bottom?this.y = o.h*m.y/2-(this.h+2*this.margin[3])*this.scale_y*g/2: this.dock_y === b5.Actor.Dock_Middle && (this.y = (this.h+2*this.margin[2])*this.scale_y*g/2);
        }
      } else 0 !== this.dock_x && (this.dock_x === b5.Actor.Dock_Left?this.x=-o.w/2+this.w*this.scale_x/2+this.margin[0]: this.dock_x === b5.Actor.Dock_Right?this.x = o.w/2-this.w*this.scale_x/2+this.margin[1]: this.dock_x === b5.Actor.Dock_Centre && (this.x = this.w*this.scale_x/2+this.margin[0])),
    0 !== this.dock_y && (this.dock_y === b5.Actor.Dock_Top?this.y=-o.h/2+this.h*this.scale_y/2+this.margin[2]: this.dock_y === b5.Actor.Dock_Bottom?this.y = o.h/2-this.h*this.scale_y/2+this.margin[3]: this.dock_y === b5.Actor.Dock_Middle && (this.y = this.h*this.scale_y/2+this.margin[2]));
    (this.x !== n || this.y !== r || null === i && 0 !== this.vr) && this.dirty();
    var f = this.actors.length;
    if (0 < f)for (var A = this.actors, x = 0;
      x < f;
      x++)A[x].update(e);
    this.cleanupDestroyedActors(),
    this.order_changed && (this.order_changed=!1, b5.Utils.sortLayers(this.actors)),
    this.frame_count++
  }}, b5.Actor.prototype.update = function(e) {
    this.baseUpdate(e);
  }, b5.Actor.prototype.updateToPhysics = function() {
  if (null !== this.body) {
    var e = Box2D.Common.Math.b2Vec2;
    this.body.SetLinearVelocity(new e(this.vx, this.vy)),
    this.body.SetAngularVelocity(this.vr),
    this.body.SetAwake(!0)}}, b5.Actor.prototype.dirty = function(e) {
  this.transform_dirty=!0;
  if(e) for (var e = this.actors, o = e.length, a = 0;
    a < o;
    a++)e[a].dirty(!0)}, b5.Actor.prototype.makeVirtual = function() {
  this.prev_scroll_pos_x = 0,
  this.prev_scroll_pos_y = 0,
  this.scroll_pos_x = 0,
  this.scroll_pos_y = 0,
  this.scroll_vx = 0,
  this.scroll_vy = 0,
  this.scroll_range = [0,
    0,
    0,
    0],
  this.virtual=!0
}, b5.Actor.prototype.Virtual_onMoveTouch = function() {
  if (this.touching && (0 !== this.scroll_range[2] || 0 !== this.scroll_range[3])) {
    var e = this.scene.app;
    this.prev_scroll_pos_x = this.scroll_pos_x,
    this.prev_scroll_pos_y = this.scroll_pos_y,
    this.scroll_vx = e.touch_drag_x,
    this.scroll_pos_x += e.touch_drag_x,
    this.scroll_vy = e.touch_drag_y,
    this.scroll_pos_y += e.touch_drag_y,
    (0 !== this.scroll_vx || 0 !== this.scroll_vy) && (this.Virtual_scrollRangeCheck(), this.layout_dirty=!0, this.Virtual_updateLayout())}}, b5.Actor.prototype.Virtual_update = function() {
  this.touching || (this.prev_scroll_pos_x = this.scroll_pos_x, this.prev_scroll_pos_y = this.scroll_pos_y, this.scroll_pos_x += this.scroll_vx, this.scroll_pos_y += this.scroll_vy, (0 !== this.scroll_vx || 0 !== this.scroll_vy) && (this.Virtual_scrollRangeCheck(), this.layout_dirty=!0, this.Virtual_updateLayout()), this.scroll_vx *= .9, this.scroll_vy *= .9, -.5 < this.scroll_vx && .5 > this.scroll_vx && (this.scroll_vx = 0), -.5 < this.scroll_vy && .5 > this.scroll_vy && (this.scroll_vy = 0))}, b5.Actor.prototype.Virtual_scrollRangeCheck = function() {
  var e = this.scroll_pos_x,
  t = this.scroll_pos_y,
  o=-this.scroll_range[0],
  a = o-this.scroll_range[2],
  n=-this.scroll_range[1],
  r = n-this.scroll_range[3];
  e < a?(e = a, this.scroll_vx = 0): e > o && (e = o, this.scroll_vx = 0),
  t < r?(t = r, this.scroll_vy = 0): t > n && (t = n, this.scroll_vy = 0),
  this.scroll_pos_x = e,
  this.scroll_pos_y = t
}, b5.Actor.prototype.Virtual_clipLayout = function(e, t, o) {
  var a = Math.abs;
  if (this.clip_virtual) {
    var n = e.w/2,
    r = e.h/2;
    e._av=!(e.y<-o-r || e.y > o+r || e.x<-t-n || e.x > t+n)}( 1 < a(this.scroll_vx) || 1 < a(this.scroll_vy)) && (e.touching=!1),
  e.dirty()}, b5.Actor.prototype.Virtual_updateLayout = function(e) {
  if (this.layout_dirty) {
    this.layout_dirty=!1;
    var o = this.prev_scroll_pos_x-this.scroll_pos_x,
    n = this.prev_scroll_pos_y-this.scroll_pos_y,
    r = this.actors.length,
    i = this.w*this.scale_x/2,
    s = this.h*this.scale_y/2;
    if (0 < r) {
      var c = this.stacking,
      d = this.actors,
      p;
      if (c === b5.Actor.Stack_None)for (var l = 0;
        l < r;
        l++)p = d[l],
      0 === p.dock_x?p.x += o: p.dock_x === b5.Actor.Dock_Left?p.x=-i+p.w*p.scale_x/2+p.margin[0]: p.dock_x === b5.Actor.Dock_Right && (p.x = i-p.w*p.scale_x/2+p.margin[1]),
      0 === p.dock_y?p.y += n: p.dock_y === b5.Actor.Dock_Top?p.y=-s+p.h*p.scale_y/2+p.margin[2]: p.dock_y === b5.Actor.Dock_Bottom && (p.y = s-p.h*p.scale_y/2+p.margin[3]),
      this.Virtual_clipLayout(p, i, s);
      else if (c === b5.Actor.Stack_H) {
        p = d[0];
        for (var _=-i+p.w*p.scale_x/2, l = 0;
          l < r;
          l++)p = d[l],
        p.x = _+p.margin[0],
        _ += p.w*p.scale_x+p.margin[1],
        this.Virtual_clipLayout(p, i, s)} else if (c === b5.Actor.Stack_V) {
        p = d[0];
        for (var u=-s+p.h*p.scale_y/2, l = 0;
          l < r;
          l++)p = d[l],
        p.y = u+p.margin[2],
        u += p.h*p.scale_y+p.margin[3],
        this.Virtual_clipLayout(p, i, s)}}if (e)for (var h = this.actors, l = 0;
      l < h.length;
      l++)h[l].Virtual_updateLayout(!0)}}, b5.Actor.prototype.Virtual_isClipped = function(e) {
  if (!this.clip_virtual)return!1;
  var t = this.w*this.scale_x/2,
  o = this.h*this.scale_y/2,
  a = e.w/2,
  n = e.h/2;
  return!!(e.y<-o-n || e.y > o+n || e.x<-t-a || e.x > t+a)}, b5.Actor.prototype.hitTest = function(e,f) {
  if (!this.touchable||!this.active)return null;
  
  var o = this.actors.length,
  a;
  if (0 < o)for (var n = this.actors, r = o-1;
    0 <= r;
    r--)if (a = n[r].hitTest(e), null !== a)return a;
    
 if (this.hit) {
    var g = this.w/2,
    m = this.h/2,
    q = this.touch_pos;
    this.touch_drag_x = e.x - q.x,
    this.touch_drag_y = e.y - q.y,
    q.x = e.x,
    q.y = e.y;
    if(this.scene.focus_actor !== this) {
    	this.touch_drag_x = 0,
    	this.touch_drag_y = 0;
    };
    var j = Math.abs(this.touch_drag_x)+1,
    k = Math.abs(this.touch_drag_y)+1;
    
    var o = b5.AABB.RectTestRect(this.absPos.x, this.absPos.y, this.w*this.scale_x, this.h*this.scale_y, e.x, e.y, 1,1);
    if(o) return this;
    else if(b5.AABB.RectTestRect(this.absPos.x, this.absPos.y, this.w*this.scale_x*2, this.h*this.scale_y*2, e.x, e.y, 1,1)) {
    	this.hovering && (this.hovering = !1, this.onHoverEnd && this.onHoverEnd(e,f)),
    	this.touching && (this.touching = !1, this.onEndTouch && this.onEndTouch(e,f))
    }
    return null;
  }
}, b5.Actor.prototype.transformPoint = function(e, t) {
  return b5.Maths.vecMulMatrix(e, t, this.transform)
}, b5.Actor.prototype.findOverlaps = function(n) {
  	var e = n || this.parent || this.scene;
  	for(var t=0,o=e.actors,a=[];t<o.length;t++)o[t]!==this && this.overlaps(o[t]) && a.push(o[t]);
  	return a;
  }, b5.Actor.prototype.overlaps = function(e) {
  var t = this.type,
  o = e.type,
  n = t === b5.Actor.Type_Rect || t === b5.Actor.Type_Image || t === b5.Actor.Type_Label,
  r = o === b5.Actor.Type_Rect || o === b5.Actor.Type_Image || o === b5.Actor.Type_Label;
  if(!this.active || !e.active) return !1;
  //Rect and Rect
  if(n && r)return this.overlapsRect(e);
  //Rect and Circle or Circle and Rect
  else if(n && o === b5.Actor.Type_Arc)return e.circleOverlapsRect(this);
  else if(r && t === b5.Actor.Type_Arc)return this.circleOverlapsRect(e);
  //Circle and Circle
  else if(t === b5.Actor.Type_Arc && o === b5.Actor.Type_Arc)return this.circleOverlaps(e);
  else return !1
}, b5.Actor.prototype.overlapsRect = function(e) {
  var t = this.absPos = this.getAbsolutePos(),
  o = e.absPos = e.getAbsolutePos(),
  a, n, r, i;
  if(this.rotation + e.rotation === 0) return b5.AABB.RectTestRect(t.x,t.y,this.w,this.h,o.x,o.y,e.w,e.h);
  else {
  	a = this.w/2, n = this.h/2, 
  	r = e.w/2, i = e.h/2;
  	
  	var s = this.ox,
  	c = this.oy,
  	d = e.ox,
  	f = e.oy;

  	var pol1 = b5.SAT.transformPoints(t.x-s,t.y-c, 
  	[-a+s, -n+c, a+s, -n+c, a+s, n+c, -a+s, n+c], this.rotation),
  	pol2 = b5.SAT.transformPoints(o.x-d,o.y-f, 
  	[-r+d, -i+f, r+d, -i+f, r+d, i+f, -r+d, i+f], e.rotation);
  	
  	return b5.SAT.PolyTestPoly(pol1, pol2, this.rotation, e.rotation);
  }
}, b5.Actor.prototype.circleOverlapsRect = function(e) {
  var t = this.absPos = this.getAbsolutePos(),
  o = e.absPos = e.getAbsolutePos(),
  a, n, r, i;
  if(e.rotation === 0) return b5.AABB.RectTestCircle(o.x,o.y,e.w,e.h,t.x,t.y,this.radius);
  else {
  	a = e.w/2, n = e.h/2;
  	r = e.ox, i = e.oy;
  	
  	var pol1 = b5.SAT.transformPoints(o.x-r,o.y-i, 
  	[-a+r, -n+i, a+r, -n+i, a+r, n+i, -a+r, n+i], e.rotation);
  	
  	return b5.SAT.PolyTestCircle(pol1, e.rotation, t, this.radius);
  }
}, b5.Actor.prototype.circleOverlaps = function(e) {
  var t = this.absPos = this.getAbsolutePos(),
  o = e.absPos = e.getAbsolutePos();
  return b5.AABB.CircleTestCircle(t.x,t.y,this.radius,o.x,o.y,e.radius);
},
b5.Actor.prototype.getLocalPos = function() {
  return {
  	x: this.x + this.x2 + this.ox,
  	y: this.y + this.y2 + this.oy
  }
},
b5.Actor.prototype.getAbsolutePos = function() {
	for(var e = this, t = e.getLocalPos();;) if(e.parent) { 
		var o = e.parent.getLocalPos();
		t.x += o.x;
		t.y += o.y;
		e = e.parent
	}else return t;
},
b5.Actor.prototype.setMask = function(e) {
	this.container.mask = void 0 !== e ? e.graphics || e.sprite : null;
},
b5.Actor.prototype.addFilter = function(e) {
	var t = this.container;
	t.filters === null && (t.filters = []);
	t = t.filters;
	t.indexOf(e) === -1 && t.push(e);
},
b5.Actor.prototype.removeFilter = function(e) {
	var t = this.container.filters, o;
	null !== t && (o = t.indexOf(e), void 0 === e ? t.splice(0) : o != -1 && t.splice(o,1));
},

'use strict', b5.ArcActor = function() {
  this.fill_style = '#ffffff',
  this.stroke_style = '#ffffff',
  this.stroke_thickness = 1,
  this.radius = 1,
  this.start_angle = 0,
  this.end_angle = 2*Math.PI,
  this.anticlockwise = !1,
  this.filled=!0,
  this.stroke_filled=!1,
  b5.Actor.call(this),
  this.sprite.destroy(), this.sprite = null,
  this.type = b5.Actor.Type_Arc,
  this.prevs = {fill_style: null},
  this.graphics = new PIXI.Graphics;
  this.graphics.zIndex = -1;
  this.container.addChild(this.graphics);
}, b5.ArcActor.prototype = new b5.Actor, b5.ArcActor.prototype.constructor = b5.ArcActor, b5.ArcActor.prototype.parent = b5.Actor.prototype, b5.ArcActor.prototype.update = function(e) {
  return this.baseUpdate(e)
}, b5.ArcActor.prototype.draw = function() {

  if(this.transform_dirty && this.active) {
  	
  	b5.app.display.transform(this.container,
  	  this.x+this.x2+(this.container.parent&&this.parent?!this.parent.ox?this.container.parent.pivot.x:this.parent.w/2:0),
  	  this.y+this.y2+(this.container.parent&&this.parent?!this.parent.oy?this.container.parent.pivot.y:this.parent.h/2:0),
  	  void 0,
  	  void 0,
  	  this.rotation,
  	  this.scale_x,
  	  this.scale_y,
   	  this.radius-(this.ox),
  	  this.radius-(this.oy),
  	  this.skew_x,
  	  this.skew_y,
  	  void 0,
  	  this.layer
  	);
  	this.transform_dirty = !1;
  	}

  /* Fill - Stroke */
  	
  if(this.container.visible = this.visible && this.opacity && this._draw) {
    this.accum_opacity = this.use_parent_opacity ? (this.parent || this.scene).accum_opacity * this.opacity : this.opacity;
    this.graphics.alpha = this.accum_opacity;
    
    this.onDraw && this.onDraw();
    this.drawChildren(!1);
    
  	var e = this.graphics,
  	a = !1;
  	
  	for(var i in this.prevs) if(this.prevs[i]!==this[i]) {
  		a = !0;
  		break;
  	}
  	
  	if(a) {
  		(this.fill_style != "transparent" || (this.stroke_thickness > 0 && this.stroke_style != "transparent")) && b5.app.display.drawArc(e, this);
  	  
  	  this.prevs = {
  	  	anticlockwise: this.anticlockwise,
  	  	start_angle: this.start_angle,
  	  	end_angle: this.end_angle,
  			radius: this.radius,
  			filled: this.filled,
  			stroke_filled: this.stroke_filled,
  			fill_style: this.fill_style,
  			stroke_thickness: this.stroke_thickness,
  			stroke_style: this.stroke_style
  		}
  	}
  }
},
  b5.ArcActor.prototype.hitTest = function(e) {
  if (!this.touchable)return null;
  var o = this.actors.length,
  a;
  if (0 < o)for (var n = this.actors, i = 0;
    i < o;
    i++)if (a = n[i].hitTest(e), null !== a)return a;
  var s = this.scene,
  c = this.transform,
  d = c[4]+s.x,
  p = c[5]+s.y;
  this.ignore_camera || (d -= s.camera_x, p -= s.camera_y);
  var l = this.accum_scale_x,
  y = this.accum_scale_y,
  _ = (e.x-d)/l,
  u = (e.y-p)/y,
  h = _*c[0]+u*c[1],
  g = _*c[2]+u*c[3],
  m = this.radius*l;
  m *= m;
  return h*h+g*g <= m?this: null
}, 'use strict', b5.LabelActor = function() {
  this.text = '',
  this.font = null,
  this.text_align = 'center',
  this.text_baseline = 'alphabetic',
  this.fill_style = '#ffffff',
  this.stroke_style = '#ffffff',
  this.stroke_thickness = 1,
  this.stroke_quality = 8,
  this.line_height = 16,
  this.max_width = 0,
  this.letter_spacing = 5,
  this.space_width= 16,
  this.indentation = !1,
  this.prevs = {fill_style:null},
  this.filled=!0,
  this._stroke_filled=!1,
  Object.defineProperty(this, 'stroke_filled', {
  	get: function() { return this._stroke_filled },
  	set: function(e) {
  		this._stroke_filled !== e && (
  			this._stroke_filled = e,
  			this.graphics.filters = e ? [b5.Filters.outline.filter] : null
  	)}
  }),
  b5.Actor.call(this),
  this.text_dirty=!0,
  this.cull=!1,
  this.graphics = new PIXI.Graphics,
  this.graphics.zIndex = -1;
  this.graphics.geometry.isBatchable=()=>{return !0}
  var e = this;
  this.graphics.onPreDraw = function() {
  	e.onPreDraw && e.onPreDraw();
  	if(this.filters && this.filters[0] === b5.Filters.outline.filter) { //Outline
  	var t = this.filters[0].uniforms;
  		t.outlineColor = PIXI.utils.string2rgb(e.stroke_style);
  		t.thickness = [ 
  			(1/this.width)*e.stroke_thickness, 
  			(1/this.height)*e.stroke_thickness * (b5.app.display_height/b5.app.display_width)
  	  ];
  	  t.outlineOnly = !e.filled;
  	}
  },
  this.container.addChild(this.graphics),
  this._matrix = new PIXI.Matrix,
  this.fontMode = 'simple', //Simple: use PIXI.Graphics (no rotation, no skew, no flip XY, faster). Complete: use PIXI.Sprite (slower first draw, rotation, flip XY, skew)
  this.format = [],
  this.scale_spacing = true,
  this.indexes = [], //Start and end index of characters in a line
  this.type = b5.Actor.Type_Label
}, b5.LabelActor.prototype = new b5.Actor, b5.LabelActor.prototype.constructor = b5.LabelActor, b5.LabelActor.prototype.parent = b5.Actor.prototype, 

b5.LabelActor.prototype.update = function(e) {
  return this.baseUpdate(e)
}, b5.LabelActor.prototype.draw = function() {
  	// TEXT
  	if(this.container.visible = this.visible && this.opacity && this._draw) {
    this.accum_opacity = this.use_parent_opacity ? (this.parent || this.scene).accum_opacity * this.opacity : this.opacity;
    this.graphics.alpha = this.accum_opacity;
    
    this.onDraw && this.onDraw();
    this.drawChildren(!1);
  	
  	this.drawText();
  	}
  	
  	if(this.transform_dirty && this.active) {
  	b5.app.display.transform(this.container,
  	  this.x+this.x2+(this.parent?!this.parent.ox?this.container.parent.pivot.x:this.parent.w/2:0),
  	  this.y+this.y2+(this.parent?!this.parent.oy?this.container.parent.pivot.y:this.parent.h/2:0),
  	  this.w,
  	  this.h,
  	  this.rotation,
  	  this.scale_x*b5.app.global_font_scale,
  	  this.scale_y*b5.app.global_font_scale,
   	  this.ox,
  	  this.oy,
  	  this.skew_x,
  	  this.skew_y,
  	  void 0,
  	  this.layer
  	);
  	this.transform_dirty = !1;
  	}
 }, 
 b5.LabelActor.prototype.drawText = function() {
 	var e = this.graphics,
  	s = this.font,
  	t = null !== s && s.frames,
  	a = !1;
  	
  	this.onTextPreDraw && this.onTextPreDraw();
  	
  	this.text = String(this.text);
  	
  	this.indentation && !this.text.startsWith('   ') && (this.text = '   '+this.text.replace(/\n|\n\ \ \ /g,'\n   '));
  	
  	if(!this.text_dirty) for(var i in this.prevs) if(this.prevs[i]!==this[i]) {
  		a = !0;
  		break;
  	}
  	
  	if(a || this.text_dirty) {
  		e._geometry.clear();
  		this.text_dirty=!1;
  		if(t && t.length > 0) {
  			//Calculate positions and sizes
  			if(this.text.length === 0) {
  			this.w = 0;
  			this.h = 0;
  	  } 
  	  else {
  	  	for(var i=0, b=this.text,f=null,x=0,y=0,pw=0,l=0,w=[],h=[],c=[],mw=this.max_width/(this.scale_x*b5.app.global_font_scale),dn=!0;i<b.length;i++) {
  	  		//If max width is defined, check for text when max is reached
  	  		//If there's a word thats goes beyond max, break the line
  	  		//Check till next space
  	  		
  	  		var fo = this.format[i] || [];
  		    //[0.color, 1.font(new!), 2.ox, 3.oy, 4.scale_x, 
  			  //5.scale_y, 6.skew_x, 7.skew_y, 8.scale_spacing, 9.align
  			  //10.baseline]
  			  !fo[1] && Array.isArray(fo[1]) && (fo[1] = s);
  				f = (fo[1] || s);
  				
  	  		dn = !0;
  	  		if(this.max_width!=0 && b[i] != " ") { //b[i].search(/\ |\.|,|:|;|\?|!|\)|}|\]|"/gi) == -1) {
  	  			for(var a = i, cw = x; x != 0 && b[a] !== void 0 && b[a].search(/\ |\.|,|:|;|\?|!|\)|}|\]/gi) == -1 && a < b.length; a++) {
  	  				var w = (f.getFrameByName(b[a]) || {w:0}).w;
  	  				if(cw > mw) { dn = !1; break }
  	  				cw += w;
  	  			}
  	  		}
  				
  				if(b[i] !== "\n" && (this.max_width==0?!0: dn)) {
  					
			 			if(f = f.getFrameByName(b[i])) {
  				  //Sizes and positions
  				  var sx = (fo[4] !== void 0 ? fo[4] : 1),
  				  sy = (fo[5] !== void 0 ? fo[5] : 1),
  				  tw = f.w * sx,
 						th = f.h * sy,
 						z = fo[8] !== void 0 ? fo[8] : !this.scale_spacing,
 						tw2 = z ? f.w/2:tw/2,
 						th2 = th/2,
 						oxt = tw2,
 						oyt = th +(f.oy*sy),
 						ox = tw2,
 						oy = th2+(f.oy*sy);
 						
 						x += pw + ox + this.letter_spacing + (f.name === " "?this.space_width:0);
 						
 						w[l] = x + ox;
 						//Max height
 						h[l] === void 0 && (h[l] = 0);
 						oy > h[l] && (h[l] = oy);
 						
 						var tx = -oxt + ((fo[2]||0)+(z?(-tw/2)+tw2:0)) + x,
 						ty = -oyt + ((fo[3]||0)+(z?th2-(f.h/2):0)) + y;
 						
 						pw = ox;
 						ph = oy;
			 			
			 			c.push([tx, ty, f.x, f.y, tw, th, sx, sy, f.bitmap, 
			 			fo[0] || this.fill_style, fo[1], 
			 			l, fo[9] || this.text_align, fo[10] || this.text_baseline, fo[6]||0,fo[7]||0]);
			 			}
  				}
  				else {
  					pw = 0;
  					y += this.line_height/b5.app.global_font_scale;
  					this.max_width !== 0 && x != 0 && i--;
  					x = 0;
  					l++;
  				}

  			}
  			
  			this.text_lines = l+1;
  			this.w = 0;
  			this.h = 0;
  			for(i = 0; i < w.length;i++) w[i] > this.w && (this.w = w[i]);
  			this.h = 0;
  			for(i = 0; i < h.length;i++) this.h += h[i]+y;
  			
  			//Draw
  			for(i = 0;i < c.length; i++) if(c[i][4]>0&&c[i][5]>0){
  			  var d = c[i],
  			  q = (d[10] || s).bitmaps[d[8]],
  			  o = q.texture.baseTexture,
  			  p = q.resolution;
  			  
  			  //Adjust
  			  switch(d[12]) {//Align
  			  	case 'center':
  			  		d[0] -= w[d[11]]/2;
  			  		break;
  			  	case 'right':
  			  		d[0] -= w[d[11]];
  			  		break;
  			  }
  			  
  			  switch(d[13]) {//Baseline
  			    case 'top':
  			    	d[1] += h[d[11]]*2;
  			    	break;
  			    case 'hanging':
  			    	d[1] += h[d[11]]*1.5;
  			    	break;
  			    case 'middle':
  			    	d[1] += h[d[11]];
  			    	break;
  			    case 'ideographic':
  			    case 'bottom':
  			    	d[1] -= h[d[11]]/2;
  			  }
  			  
  			  d[2] *= p;
  			  d[3] *= p;
  			  
  			  var m = this._matrix.set(d[6]/p,d[14],d[15],d[7]/p,d[0],d[1]),
  			  fw = d[2] + d[4] > o.width ? o.width - d[2] : d[4], //Clamp
  			  fh = d[3] + d[5] > o.height ? o.height - d[3] : d[5],
  			  tex = new PIXI.Texture(o, new PIXI.Rectangle(d[2],d[3],fw*p,fh*p));

				  e.beginTextureFill({
				  	texture: tex,
					  color: PIXI.utils.string2hex(d[9]),
					  matrix: m //We need a matrix to set the position of the texture in the graphics
				  });
				 	
				 	e.drawRect(m.tx,m.ty,d[4],d[5]);
  			}
  		}
  		}
  		
  		this.prevs = {
  			text: this.text,
  			fill_style: this.fill_style,
  			text_align: this.text_align,
  			text_baseline: this.text_baseline,
  			line_height: this.line_height,
  			max_width: this.max_width,
  			letter_spacing: this.letter_spacing,
  			space_width: this.space_width,
  			scale_spacing: this.scale_spacing,
  			indentation: this.indentation
  		}
  	}
 },
 b5.LabelActor.prototype.setTextFmt = function(t) {
 	t = String(t);
	var indexes = t.indexesOf('&f'),
  text = t.replaceAll('&f',''),
  format_ixs= [];
  
	//Set format
	for(var i = 0, nlen = 0; i < indexes.length; i+=2) {
		var start = indexes[i],
		end = indexes[i+1],
		txt = t.substr(start,end - start),
		format_string = txt.substr(3,txt.indexOf(']')-3),
		format = format_string.split(',');
	
		//Parse format
		for(var a = 0; a < format.length; a++) format[a] = !isNaN(+format[a]) ? +format[a] : format[a] == "" ? void 0 : format[a];
	
	  format_string = '['+format_string+']';
	
		text = text.replace(format_string,'');
	
		format_ixs.push([start - nlen, end - nlen - format_string.length-2, format]);
		nlen += format_string.length+4;
	}

	this.text = text;
	for (var i = 0; i < format_ixs.length; i++) {
		var n = format_ixs[i];
		for (var a = n[0]; a < n[1]; a++) this.applyFormatIndex(a, n[2]);
	}
},
 b5.LabelActor.prototype.clearFormat = function(update) {
  	this.format = [];
  	this.text_dirty=!!update;
 },
 b5.LabelActor.prototype.setFormatIndex = function(indx, format, clear) {
 	  clear && (this.format=[]);
 	  this.format[indx] = format.slice();
 	  this.text_dirty = !0;
 },
 b5.LabelActor.prototype.setFormatLine = function(line, offsetStart, offsetEnd, format, clear) {
 	  var e = this.indexes = b5.app.display.measureTextLineIndexes(this.text);
 	  clear && (this.format=[]);
  	if(e[line]) { for(var i = e[line][0]+offsetStart; i < e[line][1]+1-offsetEnd;i++) this.format[i] = format.slice();
  	this.text_dirty=!0;}
 },
 b5.LabelActor.prototype.setFormatCharacter = function(char, format, caseSensitive, clear) {
 	  clear && (this.format=[]);
 	  !caseSensitive && (char = char.toLowerCase());
 	  for(var i=0,e=this.text;i<e.length;i++) (caseSensitive?e[i]:e[i].toLowerCase()) === char && (this.format[i] = format.slice());
 	  this.text_dirty=!0;
 },
 b5.LabelActor.prototype.applyFormatLine = function(line, offsetStart, offsetEnd, format) {
 	  var e = this.indexes = b5.app.display.measureTextLineIndexes(this.text);
  	if(e[line]) { for(var i = e[line][0]+offsetStart; i < e[line][1]+1-offsetEnd;i++) {
  		!this.format[i] && (this.format[i] = []);
  		for(var a=0;a<format.length;a++) format[a] !== void 0 && (this.format[i][a] = format[a]);
  	}
  	this.text_dirty=!0;}
 },
 b5.LabelActor.prototype.applyFormatIndex = function(indx, format) {
 	  if(!this.format[indx]) return this.setFormatIndex(indx,format);
 	  for(var i=0;i<format.length;i++) format[i] !== void 0 && (this.format[indx][i] = format[i]);
 	  this.text_dirty = !0;
 },
 b5.LabelActor.prototype.applyFormatCharacter = function(char, format, caseSensitive) {
 	  !caseSensitive && (char = char.toLowerCase());
 	  for(var i=0,e=this.text;i<e.length;i++) if((caseSensitive?e[i]:e[i].toLowerCase()) === char) {
 	  	!this.format[i] && (this.format[i] = []);
 	  	for(var a=0;a<format.length;a++) format[a] !== void 0 && (this.format[i][a] = format[a]);
 	  }
 	  this.text_dirty=!0;
 },
 b5.LabelActor.prototype.getLine = function(line) {
 	return this.text.split('\n')[line];
 }
 b5.LabelActor.prototype.getLineIndexes = function(line) {
   var e = this.indexes = b5.app.display.measureTextLineIndexes(this.text);
   return e[line];
 },
  'use strict', 
 b5.ParticleActor = function() {
  b5.Actor.call(this),
  this.type = b5.Actor.Type_Particle,
  this.gravity = 0,
  this.added_callback = null,
  this.reset_callback = null
}, b5.ParticleActor.prototype = new b5.Actor, b5.ParticleActor.prototype.constructor = b5.ParticleActor, b5.ParticleActor.prototype.parent = b5.Actor.prototype, b5.ParticleActor.prototype.resetParticle = function(e) {
  if (e.life_time = 0, e.orphaned) {
    var t = this.transformPoint(e.org_x+this.x, e.org_y+this.y);
    e.x = t.x,
    e.y = t.y
  } else e.x = e.org_x,
  e.y = e.org_y;
  e.rotation = e.org_rotation,
  e.scale_x = e.org_scale_x,
  e.scale_y = e.org_scale_y,
  e.depth = e.org_depth,
  e.opacity = e.org_opacity,
  e.current_frame = e.org_current_frame,
  e.vr = e.org_vr,
  e.vx = e.org_vx,
  e.vy = e.org_vy,
  e.vd = e.org_vd,
  e.vo = e.org_vo,
  e.vsx = e.org_vsx,
  e.vsy = e.org_vsy,
  null !== this.reset_callback && this.reset_callback(e)
}, b5.ParticleActor.prototype.addParticle = function(e, t, o, a) {
  if (this.addActor(e), void 0 === e.vo && (e.vo = 0), void 0 === e.vsx && (e.vsx = 0), void 0 === e.vsy && (e.vsy = 0), e.life_time=-a, e.life_span = t, e.num_lives = o, 0 > e.life_time && (e.active=!1, e.visible=!1), e.org_num_lives = e.num_lives, e.org_x = e.x, e.org_y = e.y, e.org_rotation = e.rotation, e.org_scale_x = e.scale_x, e.org_scale_y = e.scale_y, e.org_depth = e.depth, e.org_opacity = e.opacity, e.org_current_frame = e.current_frame, e.org_vr = e.vr, e.org_vx = e.vx, e.org_vy = e.vy, e.org_vd = e.vd, e.org_vo = e.vo, e.org_vsx = e.vsx, e.org_vsy = e.vsy, e.orphaned) {
    var n = this.transformPoint(e.org_x+this.x, e.org_y+this.y);
    e.x = n.x,
    e.y = n.y
  }return null !== this.added_callback && this.added_callback(e),
  e
}, b5.ParticleActor.prototype.update = function(e) {
  var o = this.actors,
  a = o.length;
  if (0 === a)void 0 !== this.onParticlesEnd && this.onParticlesEnd(),
  this.destroy();
  else for (var n = a-1, r;
    0 <= n;
    n--) {
    r = o[n],
    r.life_time += e;
    var i = r.life_time;
    0 <= i && (0 > i-e && 0 <= i && (r.active=!0, r.visible=!0), r.active && (r.scale_x += r.vsx*e, r.scale_y += r.vsy*e, r.opacity += r.vo*e, 0 > r.opacity && (r.opacity = 0), r.vy += this.gravity*e, r.update(e), i >= r.life_span && (0 < r.num_lives && r.num_lives--, 0 < r.num_lives || 0 === r.org_num_lives?this.resetParticle(r): void 0 === this.onParticleLost?r.destroy(): this.onParticleLost(r) && r.destroy())))}return this.baseUpdate(e)}, b5.ParticleActor.prototype.generateExplosion = function(e, o, a, n, r, i, s, c) {
  this.updateParentTransforms();
  for (var d = 0;
    d < e;
    d++) {
    var l;
    for (var y in l = 'string' == typeof o?new b5[o]: new o, c)l[y] = c[y];
    l.vr += Math.random()*r,
    l.vx += Math.random()*n-n/2,
    l.vy += Math.random()*n-n/2,
    l.vx_damping = s,
    l.vy_damping = s,
    l.vo=-1/a,
    this.addParticle(l, a, 1, d/(e*i))}}, b5.ParticleActor.prototype.generatePlume = function(e, o, a, n, r, i, s, c) {
  this.updateParentTransforms();
  for (var d = 0;
    d < e;
    d++) {
    var l;
    for (var y in l = 'string' == typeof o?new b5[o]: new o, c)l[y] = c[y];
    l.vr += Math.random()*r,
    l.vx += Math.random()*n-n/2,
    l.vy += Math.random()*-n-n/2,
    l.vx_damping = s,
    l.vy_damping = s,
    l.vo=-1/a,
    this.addParticle(l, a, 0, d/(e*i))}}, b5.ParticleActor.prototype.generateRain = function(e, o, a, n, r, i, s, c, d) {
  this.updateParentTransforms();
  for (var l = 0;
    l < e;
    l++) {
    var y;
    for (var _ in y = 'string' == typeof o?new b5[o]: new o, d)y[_] = d[_];
    y.x = Math.random()*c-c/2,
    y.vr += Math.random()*r,
    y.vy += Math.random()*n+n/2,
    y.vx_damping = s,
    y.vy_damping = s,
    y.vo=-1/a,
    this.addParticle(y, a, 0, l/(e*i))}}, 'use strict', b5.PolygonActor = function() {
  this.fill_style = '#ffffff',
  this.stroke_style = '#ffffff',
  this.stroke_thickness = 1,
  this.filled=!0,
  this.stroke_filled=!1,
  this.points = null,
  b5.Actor.call(this),
  this.sprite.destroy(), this.sprite = null,
  this.type = b5.Actor.Type_Polygon,
  this.prevs = {fill_style: null},
  this.graphics = new PIXI.Graphics;
  this.graphics.zIndex = -1;
  this.container.addChild(this.graphics);
}, b5.PolygonActor.prototype = new b5.Actor, b5.PolygonActor.prototype.constructor = b5.PolygonActor, b5.PolygonActor.prototype.parent = b5.Actor.prototype, b5.PolygonActor.prototype.update = function(e) {
  return this.baseUpdate(e)
},
b5.PolygonActor.prototype.updatePointsPhysics = function() {
	if(this.body !== null) for(var i=0,t=this.getFixtures()[0].m_shape.m_vertices,o=this.points,a=0;i<t.length;i++) {
		t[i].x = this.points[a] / this.scene.world_scale;
   	t[i].y = this.points[a+1] / this.scene.world_scale;
   	a+=2;
	}
}, b5.PolygonActor.prototype.draw = function() {
  
  if(this.transform_dirty && this.active) {
  	b5.app.display.transform(this.container,
  	  this.x+this.x2+(this.parent?!this.parent.ox?this.container.parent.pivot.x:this.parent.w/2:0),
  	  this.y+this.y2+(this.parent?!this.parent.oy?this.container.parent.pivot.y:this.parent.h/2:0),
  	  this.w,
  	  this.h,
  	  this.rotation,
  	  this.scale_x,
  	  this.scale_y,
   	  (this.w/2)-(this.ox),
  	  (this.h/2)-(this.oy),
  	  this.skew_x,
  	  this.skew_y,
  	  void 0,
  	  this.layer
  	);
  	this.transform_dirty = !1;
  	}

 	/* Fill - Stroke */
  	
  if(this.container.visible = this.visible && this.opacity && this._draw) {
  	this.accum_opacity = this.use_parent_opacity ? (this.parent || this.scene).accum_opacity * this.opacity : this.opacity;
    this.graphics.alpha = this.accum_opacity;
    
    this.onDraw && this.onDraw();
  	this.drawChildren(!1);
  	
  	var e = this.graphics,
  	a = !1;
  	
  	for(var i in this.prevs) if(i!=="points"&&this.prevs[i]!==this[i]) {
  		a = !0;
  		break;
  	}
  	if(!a) for(var i = 0; i < this.points.length; i++) if(this.prevs.points && this.points[i] != this.prevs.points[i]) {
  		a = !0;
  		break;
  	}
  	
  	if(a) {
  		(this.fill_style != "transparent" || (this.stroke_thickness > 0 && this.stroke_style != "transparent")) && b5.app.display.drawPolygon(e, this);
  	
  	  this.prevs = {
  			points: this.points.slice(),
  			filled: this.filled,
  			stroke_filled: this.stroke_filled,
  			fill_style: this.fill_style,
  			stroke_thickness: this.stroke_thickness,
  			stroke_style: this.stroke_style,
  			corner_radius: this.corner_radius
  		}
  	}
  }
},
  'use strict', b5.RectActor = function() {
  this.fill_style = '#ffffff'
  this.stroke_style = '#ffffff',
  this.stroke_thickness = 1,
  this.corner_radius = 0,
  this.filled=!0,
  this.stroke_filled=!1,
  this.prevs = {fill_style: null},
  b5.Actor.call(this),
  this.type = b5.Actor.Type_Rect,
  this.sprite.destroy(), this.sprite = null,
  this.graphics = new PIXI.Graphics,
  this.graphics.zIndex = -1;
  this.container.addChild(this.graphics);
}, b5.RectActor.prototype = new b5.Actor, b5.RectActor.prototype.constructor = b5.RectActor, b5.RectActor.prototype.parent = b5.Actor.prototype, b5.RectActor.prototype.update = function(e) {
  return this.baseUpdate(e)}, b5.RectActor.prototype.draw = function() {
  
  if(this.transform_dirty && this.active) {
  	if (0 !== this.depth && 1 !== this.depth) {
      var y = 1/this.depth;
  	}else var y = 1;
  	
  	b5.app.display.transform(this.container,
  	  this.x+this.x2+(this.parent?!this.parent.ox?this.container.parent.pivot.x:this.parent.w/2:0),
  	  this.y+this.y2+(this.parent?!this.parent.oy?this.container.parent.pivot.y:this.parent.h/2:0),
  	  this.w,
  	  this.h,
  	  this.rotation,
  	  this.scale_x*y,
  	  this.scale_y*y,
   	  (this.w/2)-(this.ox),
  	  (this.h/2)-(this.oy),
  	  this.skew_x,
  	  this.skew_y,
  	  void 0,
  	  this.layer
  	);
  	this.transform_dirty = !1;
  	}
  	
 	/* Fill - Stroke */
  	
  if(this.container.visible = this.visible && this.opacity && this._draw) {
  	this.accum_opacity = this.use_parent_opacity ? (this.parent || this.scene).accum_opacity * this.opacity : this.opacity;
    this.graphics.alpha = this.accum_opacity;
    
    this.onDraw && this.onDraw();
  	this.drawChildren(!1);
  	
  	var e = this.graphics,
  	a = !1;
  	
  	this.ss_x = this.w;//*this.scale_x,
  	this.ss_y = this.h;//*this.scale_y;
  	
  	for(var i in this.prevs) if(this.prevs[i]!==this[i]) {
  		a = !0;
  		break;
  	}
  	
  	if(a) {
  		(this.fill_style != "transparent" || (this.stroke_thickness > 0 && this.stroke_style != "transparent")) && b5.app.display.drawRect(e, this);
  	
  		this.prevs = {
  			ss_x:this.ss_x,
  			ss_y:this.ss_y,
  			filled: this.filled,
  			stroke_filled: this.stroke_filled,
  			fill_style: this.fill_style,
  			stroke_thickness: this.stroke_thickness,
  			stroke_style: this.stroke_style,
  			corner_radius: this.corner_radius
  		}
  	}
  }
}, 
  'use strict', b5.MapActor = function() {
  this.tiles = [],
  this.map = [],
  this.collision_map = [],
  this.tile_width = 32,
  this.tile_height = 32,
  this.map_width = 0,
  this.map_height = 0,
  this.display_width = 8,
  this.display_height = 8,
  b5.Actor.call(this),
  this.type = b5.Actor.Type_Map
}, b5.MapActor.prototype = new b5.Actor, b5.MapActor.prototype.constructor = b5.MapActor, b5.MapActor.prototype.parent = b5.Actor.prototype, b5.MapActor.prototype.update = function(e) {
  return this.baseUpdate(e)}, b5.MapActor.prototype.generateTiles = function(e, o, a, n) {
  for (var r = .5, i = .5, s = 0;
    s < e;
    s++)this.tiles[s] = {
    x: r,
    y: i
  },
  r += o,
  r >= n && (r = .5, i += a);
  this.tile_width = o,
  this.tile_height = a
}, b5.MapActor.prototype.setTile = function(e, t, o, a) {
  var n = this.map_width,
  r = this.map_height;
  0 > e || e >= n || 0 > t || t >= r || (a !== void 0 && a?this.collision_map[t*n+e] = o: this.map[t*n+e] = o)}, b5.MapActor.prototype.getTile = function(e, t, o) {
  var a = this.map_width,
  n = this.map_height;
  return 0 > e || e >= a?-1: 0 > t || t >= n?-1: void 0 !== o && o?this.collision_map[t*a+e]: this.map[t*a+e]}, b5.MapActor.prototype.getTileXY = function(e, t) {
  var o = Math.round,
  a = this.map_width,
  n = this.map_height,
  r = this.tile_width,
  i = this.tile_height;
  return {
    x: o((e-r/2)/r)+(a>>1),
    y: o((t-i/2)/i)+(n>>1)}}, b5.MapActor.prototype.getTilePosition = function(e, t, o) {
  var a = this.tile_width,
  n = this.tile_height,
  r = this.getTileXY(e, t);
  return r.x -= this.map_width>>1,
  r.y -= this.map_height>>1,
  r.x *= a,
  r.y *= n,
  'm' === o?r.y += n/2: 'b' === o?r.y += n: 'c' === o?r.x += a/2: 'r' == o && (r.x += a),
  r
},

b5.MapActor.prototype.getTileFromPosition = function(e, t, o) {
  var a = this.getTileXY(e, t);
  return this.getTile(a.x, a.y, o)
}, b5.MapActor.prototype.draw = function() {
	
	},
 !b5.Sound && (b5.Sound = {}),
 'use strict', 
 b5.App = function(e, t, o) {
  typeof o != 'object' && (o = {}),
  b5.app = this,
  this.removals = [],
  this.touched=!1,
  this.touch_pos = {
    x: 0,
    y: 0
  },
  this.touch_drag_x = 0,
  this.touch_drag_y = 0,
  this.last_time = performance.now(),
  this.dt = 0,
  this.avg_time = this.last_time,
  this.avg_fps = 60,
  this.a_avg_fps = 60,
  this.avg_frame = 0,
  this.canvas_scale = 1,
  this.pixel_ratio = 1,
  this.canvas_pixel_ratio = 1,
  this.design_width = e.width,
  this.design_height = e.height,
  this.display_width = e.width,
  this.display_height = e.height,
  this.adapt_resolution = true,
  this.canvas_cx = this.design_width>>1,
  this.canvas_cy = this.design_height>>1,
  this.order_changed=!0,
  this.total_loaded = 0,
  this.total_load_errors = 0,
  this.inner_width = b5.Display.getWidth(),
  this.inner_height = b5.Display.getHeight(),
  this.fill_screen=!1,
  this.center_canvas = !0,
  this.disable_dock_screen=!1,
  this.started = null,
  this.num_logic = 0,
  this.num_draw = 0,
  this.world = null,
  this.scenes = [],
  this.canvas = e,
  this.force_rescaling = !1,
  this.canvas_scale_method = b5.App.FitNone,
  this.touch_supported = this.isTouchSupported(),
  this.allow_touchables=!0,
  this.target_frame_rate = 60,
  this.min_speed = 1/6,
  this.adaptive_physics=!1,
  this.physics_step = 4,
  this.focus_scene = null,
  this.focus_scene2 = null,
  this.hover_focus = null,
  this.clear_canvas=!1,
  this.touch_focus = null,
  this.global_scale = 1,
  this.global_font_scale = 1,
  this.global_smoothing = !0,
  this.prevent_default=!1,
  this.default_assets_path = '',
  this.texture_resolution = 1,
  this.async_texture_decoding = !0,
  this.fast_texture_decoding = !1,
  this.connected_gamepads = [],
  //framerate limiter
  this.fps_limit = 60,
  //vsync
  this.vsync = !0,
  //New: pause app
  this.active = !0,
  //New: cursor hide/show after time
  this.cursor = 'default',
  this.hide_cursor = !1,
  this.cursor_hide_time = 2000,
  this._cursor_hide_time_counter = 0,
  //Utilities when pausing/resuming app
  this.mute_on_pause = !0,
  this.freeze_on_pause = !0,
  this.visible = !0,
  this.context_options = o,
  //Splash screen (wait for sound engine / startup files to load)
  this.show_splash = !0,
  this.debug=!1,
  this.timelines = new b5.TimelineManager,
  b5.ActionsListManager !== void 0 && (this.actions = new b5.ActionsListManager),
  this.events = new b5.EventsManager,
  this.tasks = new b5.TasksManager,
  this.box2d = 'undefined' != typeof Box2D,
  this.instants = 'undefined' != typeof FBInstant,
  this.use_web_audio = t?!0:!1,
  this.audio_config = { sampleRate: 44100 },
  this.shared_world=!1,
  this.time_step = .03333,
  this.mobile = b5.Utils.IsMobile(),
  this.platform = b5.Utils.GetPlatform(),
  this.bitmaps = {},
  this.brushes = {},
  this.shapes = {},
  this.materials = {},
  this.sounds = {},
  this.fonts = {},
  this.raw = {},
  this.shaders = {},
  //Placeholder for event listeners
  this.onPause = null,
  this.onResume = null,
  this.onBack = null,
  this.onResize = null,
  this.onBatteryLevel = null,
  this.onBatteryCharging = null,
  this.onTick = null,
  this.onResourceLoaded = function(e, t) {
    this.onResourceLoadedBase(e, t)
  },
  this.display = new b5.PixiDisplay(this.canvas, o);
  
  b5.Display.setBackgroundColor("black");
  this.setBackgroundColor('black');
  //Event listeners
  window.navigator.msPointerEnabled?(
    e.addEventListener('MSPointerDown', this.onTouchStart, !1), 
    e.addEventListener('MSPointerMove', this.onTouchMove, !1), 
    e.addEventListener('MSPointerUp', this.onTouchEnd, !1)
    ):(
    e.addEventListener('touchstart', this.onTouchStart, !1), 
    e.addEventListener('touchmove', this.onTouchMove, !1), 
    e.addEventListener('touchend', this.onTouchEnd, !1),
    
    e.addEventListener('mousedown', this.onTouchStart, !1), 
    e.addEventListener('mousemove', this.onTouchMove, !1), 
    e.addEventListener('mouseup', this.onTouchEnd, !1), 
    e.addEventListener('mouseout', this.onTouchEnd, !1)
  );
  var s = 'onwheel' in this.canvas ?'wheel': document.onmousewheel === void 0?'DOMMouseScroll': 'mousewheel';
  addEventListener(s, this.onWheel, !1);
  addEventListener('keypress', this.onKeyPress, !1),
  addEventListener('keydown', this.onKeyDown, !1),
  addEventListener('keyup', this.onKeyUp, !1),
  //Display events
  window.addEventListener('resize',this.onResizeBase,!1),
  this.canvas.addEventListener('contextmenu',function(t){
    b5.app.prevent_default && t.preventDefault();
  },!1),
  //Visibility events
  document.addEventListener('visibilitychange',this.onVisibilityChangeBase,!1),
  //New: onBack (back button in mobile devices, disabled in browsers)
  window.addEventListener('popstate', this.onBackBase, !1),
  //Extra: Battery events
  navigator.getBattery && navigator.getBattery().then(batt=>{
    var e = b5.app;
    e.battery_info = {
      charging: batt.charging,
      level: batt.level
    },
    batt.onlevelchange = e.onBatteryStateChangeBase,
    batt.onchargingchange = e.onBatteryStateChangeBase;
  });
 },
 
  Object.defineProperty(b5.App.prototype, '_focus_scene', {
    get: function() {
      return this.focus_scene
    }, set: function(e) {
      this.focus_scene !== e && (this.focus_scene = b5.Utils.resolveObject(e))}}), Object.defineProperty(b5.App.prototype, '_focus_scene2', {
    get: function() {
      return this.focus_scene2
    }, set: function(e) {
      this.focus_scene2 !== e && (this.focus_scene2 = b5.Utils.resolveObject(e))}}), b5.App.FitNone = 0, b5.App.FitX = 1, b5.App.FitY = 2, b5.App.FitBest = 3, b5.App.FitSize = 4, b5.App.FitGreatest = 5, b5.App.FitSmallest = 6, b5.App.FitBest2 = 7, 
  b5.App.prototype.onKeyPress = function(e) {
    var t = b5.app;
    null != t.focus_scene && t.focus_scene.onKeyPressBase(e)
  }, 
  b5.App.prototype.onKeyDown = function(e) {
    var t = b5.app;
    null != t.focus_scene && t.focus_scene.onKeyDownBase(e),
    b5.Keyboard.e(e);
  }, 
  b5.App.prototype.onKeyUp = function(e) {
    var t = b5.app;
    null != t.focus_scene && t.focus_scene.onKeyUpBase(e),
    b5.Keyboard.e(e);
  }, 
  b5.App.prototype.isTouchSupported = function() {
  var e = window.navigator.msMaxTouchPoints,
  t = b5.Utils.HasTouchscreen() || 'onmousedown' in this.canvas;
  return!!(e || t )}, 
  /* NEW! */
  b5.Keyboard = function() {
    var e = b5.Keyboard.listeners;
    this.index = e.length,
    this.raw = {},
    this.key = {},
    this.lowercase_raw = !1,
    e.push(this);
  },
  b5.Keyboard.e = function(k) {
    for(var i=0, e=b5.Keyboard.listeners; i< e.length;i++) e[i].update(k);
   
  },
  b5.Keyboard.listeners = [],
  b5.Keyboard.prototype.update = function(e) {
  	var t = this.lowercase_raw,
  	o = t ? e.key.toLowerCase() : e.key,
  	a = t ? e.code.toLowerCase() : e.code;
    e.type == "keydown" && !e.repeat && (this.raw[o] = !0, this.key[a] = !0);
    e.type == "keyup" && (this.raw[o] = !1, this.key[a] = !1);
  },
  b5.Keyboard.prototype.destroy = function() {
    b5.Keyboard.listeners.splice(this.index,1);
  },
  /* NEW! */
  b5.Gamepad = function(e) {
    this.index = b5.Gamepad.listeners.length,
    this.gamepad_index = e,
    this.button = {},
    this.axis = {
      HAT: {x: 0, y: 0},
      LSTICK: {x: 0, y: 0},
      RSTICK: {x: 0, y: 0},
      AXIS2: {x: 0, y: 0},
      AXIS3: {x: 0, y: 0},
      AXIS4: {x: 0, y: 0},
      LTRIGGER: {x: 0},
      RTRIGGER: {x: 0}
    },
    this.connected = !1,
    this.name = "",
    this.vendor_code = "0000",
    this.product_code = "0000",
    this.mapping = {
    	//Standard Gamepad
      buttons: ["A","B","X","Y","LB","RB","LT","RT","SELECT","START","THUMBL","THUMBR","UP","DOWN","LEFT","RIGHT","HOME"],
      axes: ["LSTICK.x","LSTICK.y","RSTICK.x","RSTICK.y", "AXIS2.x", "AXIS2.y", "AXIS3.x", "AXIS3.y", "AXIS4.x", "AXIS4.y"]
    };
    //Setup buttons
    for(var i=0, t = this.mapping.buttons;i < t.length;i++) this.button[ t[i] ] = 0;
    b5.Gamepad.listeners.push(this);
  },
  b5.Gamepad.listeners = [],
  b5.Gamepad.prototype.update = function(e) {
    var t = this.mapping.buttons,
    a = this.mapping.axes;
    if(e) {
    //Update data
      if(!this.connected) {
        this.connected = !0;
        this.name = e.id.substr(0,e.id.lastIndexOf("(Vendor")).trim(),
        this.vendor_code = e.id.substr(e.id.lastIndexOf("Vendor: ")+8,4),
        this.product_code = e.id.substr(e.id.lastIndexOf("Product: ")+9,4);      
      }
      //Buttons
      for(var i=0, o=e.buttons;i < o.length;i++)
        this.button[ t[i] || ("BUTTON"+i) ] = o[i].value;
      
      //HAT as Axis
      var n = 0, r = 0, i = t.indexOf("UP"), s =	t.indexOf("DOWN"), u = t.indexOf("LEFT"), d = t.indexOf("RIGHT");
      //UP (y-)
      o[i].pressed && ( r = o[s].pressed ? 0 : -1),
      //DOWN (y+)
      o[s].pressed && ( r = o[i].pressed ? 0 : 1),
      //LEFT (x-)
      o[u].pressed && ( n = o[d].pressed ? 0 : -1),
      //RIGHT (x+)
      o[d].pressed && ( n = o[u].pressed ? 0 : 1),
        
      this.axis["HAT"] = { x: n, y: r};
      //Axes
      s = null;
      if(e.axes) for(var i=0, o=e.axes;i < o.length;i++) {
        s = a[i].split(".");
        this.axis[ s[0] ][ s[1] ]= Math.round(o[i]*100)*0.01;
      }
   }
   else this.connected = !1;
  },
  b5.Gamepad.prototype.map = function(e,t,o) {
    var a = this.mapping[e];
    a[t] = o.toUpperCase();
  },
  b5.Gamepad.prototype.destroy = function() {
    b5.Gamepad.listeners.splice(this.index,1);
  },
  'use strict',
  b5.App.prototype.screenshot = function() {
   return this.canvas.toDataURL();
  },
  b5.App.prototype.exit = function() {
  	window.close();
  	navigator.app && navigator.app.exitApp();
  }
  //For computers or if you have a mouse connected
  b5.App.prototype.setCursor = function(e) {
    var t = e.indexOf(".")>-1?'url('+e+'),auto':e;
    e != 'none' && (this.cursor = t);
    return this.canvas.style.cursor = t;
  },
  b5.App.prototype.onResizeBase = function(i) {
    var e = b5.app,
    t = b5.Display.getWidth(),
    o = b5.Display.getHeight(),
    a = {},
    n,r;
    //For some reason, if fast resizing occurs, scaling method returns to none, so it needs to do it twice
    for(var s=0;s<2;s++) e.setCanvasScalingMethod();
    
    n = e.inner_width,
    r = e.inner_height,
    e.center_canvas && ( a = b5.Utils.GetCenterPos(t,o,n,r), e.setCanvasPosition(a.left,a.top) ), 
    e.onResize && e.onResize(t,o,n,r,a.left,a.top);
    e.resizeCover && e.resizeCover(t,o,n,r,a.left,a.top);
  },
  
  //Added important missing feature:
  b5.App.prototype.onVisibilityChangeBase = function() {
    var e = b5.app, t = document.visibilityState == "visible";
    e.visible = t;
    e.adt && ( t ? (
       //Resume audio playback if setted
       e.mute_on_pause && b5.Sound.context && b5.Sound.context.resume(),
       //Resume app
       !e.paused && (
         e.freeze_on_pause && e.resume(),
         e.onResume && e.onResume(),
         e.last_time = performance.now()
        )
    ):(
       //Pause audio playback if setted
       e.mute_on_pause && b5.Sound.context && b5.Sound.context.suspend(),
       //Pause App
       e.freeze_on_pause && e.pause(true),
       e.onPause && e.onPause()
    ));
  },
  //Battery event handler
  b5.App.prototype.onBatteryStateChangeBase = function(e) {
    var t = b5.app, o = e.currentTarget;
    t.battery_info.charging = o.charging,
    t.battery_info.level = o.level,
    e.type == "levelchange" && t.onBatteryLevel && t.onBatteryLevel(o.level),
    e.type == "chargingchange" && t.onBatteryCharging && t.onBatteryCharging(o.charging);
  },
  b5.App.prototype.onBackBase = function(e) {
  	b5.app.onBack && b5.app.onBack();
  },

  b5.App.prototype.onTouchStart = function(t) {
  var e = b5.app,
  //New: Identify device type (touchscreen, mouse)
  i = {type: t.type, button: t.button};
   //t.touches is undefined, redundant code, optimizing it
//  if (!(e.touch_supported && (t.stopPropagation(), !e.prevent_default && t.preventDefault()/*FAULTY[NOT MORE]*/, 1 > 2/*t.touches.length/**/))) {

  if(e.touch_supported) {
    t.stopPropagation();
    e.prevent_default && t.preventDefault();
    var o = e.focus_scene,
    a = e.focus_scene2;
    if (e.touched=!0, e.touch_pos = e.touch_supported && void 0 !== t.changedTouches?e.getCanvasPoint(t.changedTouches[0].pageX, t.changedTouches[0].pageY): e.getCanvasPoint(t.pageX, t.pageY), null != o && o.onBeginTouchBase(e.touch_pos,i), null != a && a.onBeginTouchBase(e.touch_pos,i), e.allow_touchables) {
      var r = e.findHitActor(e.touch_pos);
      r && (r.scene.focus_actor = r);
      null != r && (e.touch_focus = r, r.onBeginTouchBase(e.touch_pos,i), r.touchmove=false)}}}, 
  b5.App.prototype.onTouchEnd = function(t) {
  var e = b5.app,
  i = t.type;
   //t.touches is undefined, redundant code, fixing it
  // !(e.touch_supported && (t.stopPropagation(), e.prevent_default && t.preventDefault() /*FAULTY[NOT MORE]*/, 1 > 2/*t.touches.length/**/))) {
  
   if(e.touch_supported) {
    t.stopPropagation();
    e.prevent_default && t.preventDefault();
    var o = e.focus_scene,
    a = e.focus_scene2;
    if (e.touched=!1, e.touch_pos = e.touch_supported && void 0 !== t.changedTouches?e.getCanvasPoint(t.changedTouches[0].pageX, t.changedTouches[0].pageY): e.getCanvasPoint(t.pageX, t.pageY), null != o && o.onEndTouchBase(e.touch_pos,i), null != a && a.onEndTouchBase(e.touch_pos,i), e.allow_touchables) {
      var r = e.findHitActor(e.touch_pos,i);
      r && (r.scene.focus_actor = null);
      null != r && r.onEndTouchBase(e.touch_pos,i),
      null != e.touch_focus && (void 0 !== e.touch_focus.onLostTouchFocus && e.touch_focus.onLostTouchFocus(e.touch_pos), e.touch_focus = null) }} 
}, b5.App.prototype.onTouchMove = function(t) {
  var e = b5.app,
  p = t.type;
  
  //Reset cursor hiding counter
  e.hide_cursor && (
  e._cursor_hide_time_counter = 0,
  e.canvas.style.cursor != e.cursor && e.setCursor(e.cursor)
  );
   //t.touches is undefined, redundant code, fixing it
 // if (!(e.touch_supported && (t.stopPropagation(), e.prevent_default && t.preventDefault()/*FAULTY[NOT MORE]*/, 1 > 2/*t.touches.length/**/))) {
 if(e.touch_supported) {
    t.stopPropagation();
    e.prevent_default && t.preventDefault();
    var o = e.focus_scene,
    a = e.focus_scene2,
    n = e.touch_pos.x,
    r = e.touch_pos.y;
    if (e.touch_pos = e.touch_supported && void 0 !== t.changedTouches?e.getCanvasPoint(t.changedTouches[0].pageX, t.changedTouches[0].pageY): e.getCanvasPoint(t.pageX, t.pageY), e.raw_touch_x = t.pageX, e.raw_touch_y = t.pageY, e.touch_drag_x = n-e.touch_pos.x, e.touch_drag_y = r-e.touch_pos.y, null != o && o.onMoveTouchBase(e.touch_pos,p,t.touches), null != a && a.onMoveTouchBase(e.touch_pos,p,t.touches), e.allow_touchables) {
      var s = e.findHitActor(e.touch_pos);
      s && (s.scene.focus_actor = s);
      null != s && (s.hovering = !0, s.onMoveTouchBase(e.touch_pos,p,e.touches)),
      /*null !== e.hover_focus && void 0 !== e.hover_focus.onHover && e.hover_focus.onHoverEnd(e.touch_pos,p),*/
      e.hover_focus = s,
      null !== s && void 0 !== s.onHover && s.onHover(e.touch_pos,p)}}}, b5.App.prototype.onWheel = function(t) {
  var e = b5.app;
  e.touch_supported && (t.stopPropagation(), e.prevent_default && t.preventDefault());
  var o = e.focus_scene,
  a = e.focus_scene2;
  null != o && o.onWheelBase(t),
  null != a && a.onWheelBase(t)}, b5.App.prototype.addScene = function(e) {
  return this.scenes.push(e),
  e.app = this,
  this.display.stage.addChild(e.container),
  e
}, b5.App.prototype.removeScene = function(e) {
  this.focus_scene == e && (this.focus_scene = null),
  this.removals.push(e)}, b5.App.prototype.cleanupDestroyedScenes = function() {
  var e = this.removals.length;
  if (0 < e)for (var o = this.removals, a = this.scenes, n = a.length, r = 0, i;
    r < e;
    r++) {
    i = o[r];
    for (var c = 0;
      c < n;
      c++)if (i == a[c]) {
      i.release(),
      this.display.stage.removeChild(i.container),
      a.splice(c, 1),
      n--;
      break
    }}this.removals = []}, b5.App.prototype.findScene = function(e) {
  for (var o = this.scenes, a = o.length, n = 0;
    n < a;
    n++)if (o[n].name == e)return o[n];
  return null
}, 
/*
 Adding resources to app has been removed.
 Instead, add resources to your scenes, you'll have at least one.
*/
//Instead, adding a global resource loaded method for every scene
 b5.App.prototype.areResourcesLoaded = function() {
   for(var i=0, e=this.scenes; i<e.length;i++) 
     if(!e[i].areResourcesLoaded()) return !1;
   return !0;
},
 b5.App.prototype.findResource = function(o,a) {
 	for(var i = 0, e = this.scenes, t; i<e.length; i++) if(t = e[i].findResource(o,a))return t;
 	return null;
},
 b5.App.prototype.onResourceLoadedBase = function(e, t) {
  e.preload && b5.app.total_loaded++,
  t?(e.preload && b5.app.total_load_errors++, console.log('Error loading resource '+e.name)): this.debug && console.log('Resource loaded '+e.name),
  e.loaded=!0
  this.sequential_resource_loading && e.parent && e.parent.tryLoadNextResource();
},
 b5.App.prototype.draw = function() {
  for (var e = this.scenes, o = e.length, a = 0; a < o;a++)e[a].draw();
 }, b5.App.prototype.update = function(e) {
  var o = b5.app,
  a = this.scenes,
  n = a.length;
  if (o.dt = e, o.timelines.update(e), void 0 !== o.actions && o.actions.execute(), o.tasks.execute(), null !== this.world) {
    if (0 === this.time_step)this.world.Step(e, o.physics_step, o.physics_step);
    else {
      var r = 1;
      this.adaptive_physics && (r = this.target_frame_rate/(1/this.adt)+.5<<0, 1 > r?r = 1: 3 < r && (r = 3));
      for (var i = 0;
        i < r;
        i++)this.world.Step(this.time_step, o.physics_step, o.physics_step)}/*null !== this.world && this.world.ClearForces()*/}for (var i = 0;
    i < n;
    i++)a[i].update(e);
  this.cleanupDestroyedScenes(),
  this.order_changed && (this.order_changed=!1, b5.Utils.sortLayers(this.scenes))
 }, 
 b5.App.prototype.mainLogic = function() {
 	b5.app.now = performance.now();
  var e = b5.app,
  t = e.now,
  o = t-e.last_time;
  e.last_time = t,
  o < 0 && (o = 1),
  e.adt = o < 1 ? 1/60 : o/1e3;
  var a;
  a = 0 === e.target_frame_rate?e.adt: 1/e.target_frame_rate,
  //If the app is running slow, it has a locking for minimum speed, and runs in slow motion, this can be a problem for rythm games. Setting it as optional:
  e.min_speed < a && (a = e.min_speed);
  //Gamepad update input listeners
  for(var i=0, n = b5.Gamepad.listeners, r = n.length > 0 && (this.connected_gamepads = navigator.getGamepads()); i < n.length; i++)
    n[i].update(r[n[i].gamepad_index]);
    
  e.update(a),
  //Cursor hiding time
  this.hide_cursor && (this._cursor_hide_time_counter < this.cursor_hide_time ? this._cursor_hide_time_counter+=this.dt*1e3 : this.canvas.style.cursor != 'none' && this.setCursor('none')),
    
  this.avg_time = t,
  this.a_avg_fps = 0.97*this.a_avg_fps + 0.03*1000/(this.avg_time-this.avg_frame);  
  this.avg_frame = this.avg_time,
  this.avg_fps = Math.round(this.a_avg_fps);
  
  e.num_logic++
}, 
b5.App.prototype.mainDraw = function() {
  var e = b5.app,
  r = e.display,
  i = e.canvas.width,
  s = e.canvas.height,
  n = null;
  r.drawCount = 0;
  e.mainLogic(),
  e.draw(),
  r.pixi.render();
  e.onPostDraw && e.onPostDraw();
  e.num_draw++,
  //Moving canvas position and scaling methods to onResizeBase
  e.force_rescaling && e.onResizeBase(),
  e.onTick && e.onTick(),
  e.active && ( e.vsync ? requestAnimationFrame(e.mainDraw) : setTimeout(e.mainDraw,1e3/e.fps_limit));
}, 
  b5.App.prototype.start = function() {
  this.onResizeBase(),
  requestAnimationFrame(this.mainDraw),
  this.dirty()
  }, b5.App.prototype.findHitActor = function(e) {
  var t = null;
  return null !== this.focus_scene && (t = this.focus_scene.findHitActor(e)),
  null === t && null !== this.focus_scene2 && (t = this.focus_scene2.findHitActor(e)),
  t
}, b5.App.prototype.dirty = function() {
  for (var e = this.scenes, o = e.length, a = 0;
    a < o;
    a++)e[a].dirty()}, 
  b5.App.prototype.setCanvasPosition = function(e,t) {
    var o = this.canvas.style;
    o.left = e + 'px',
    o.top = t + 'px';
  },
  b5.App.prototype.setResolution = function(e,t) {
  	var o = b5.app, n = o.display,
    r = b5.Utils.GetDevicePixelRatio();
      /*
    o.adapt_resolution && (
       e > innerWidth*r ? (e = innerWidth*r, t = e * (9/16)) :
       t > innerWidth*r && (t = innerHeight*r, e = t * (16/9))
     );*/
    n.renderer.resize(e,t);
    n.stage.scale.set(b5.app.global_scale*(e>t?e/b5.app.design_width:t/b5.app.design_height));
    o.display_width = e,
    o.display_height = t,
    o.onResizeBase(),
    window.resizeTo(e,t);
  },
  b5.App.prototype.setBackgroundColor = function(e){
    this.canvas.style.backgroundColor = e;
  },
  b5.App.prototype.getCanvasPoint = function(e, t) {
  var o = b5.app,
  a = o.canvas_scale;
  return {
    x: (e-this.canvas.offsetLeft-o.canvas_cx)/a,
    y: (t-this.canvas.offsetTop-o.canvas_cy)/a
  }},
  b5.App.prototype.setCanvasScalingMethod = function(e) {
  void 0 !== e && (this.canvas_scale_method = e);
  var t = this.design_width,
  o = this.design_height,
  a = b5.Display.getWidth(),
  n = b5.Display.getHeight(),
  f = this.display;
  if (!this.fill_screen) {
    var r=!0;
    switch (this.canvas_scale_method) {
      case b5.App.FitX: r=!0;
        break;
      case b5.App.FitY: r=!1;
        break;
      case b5.App.FitBest: r=!!(a/t < n/o);
        break;
      case b5.App.FitGreatest: r=!!(a > n);
        break;
      case b5.App.FitSmallest: r=!!(a < n);
        break;
      case b5.App.FitBest2: r=!!(a/t > n/o);
    }r?n = a*this.design_height/this.design_width: a = n*this.design_width/this.design_height
  };
  this.inner_width = a,
  this.inner_height = n;
  var i = t,
  s = o,
  c = 1,
  d = 1;
  if (this.canvas_scale = this.global_scale, this.canvas_scale_method === b5.App.FitNone);
  else if (this.canvas_scale_method === b5.App.FitSize)i = a,
  s = n;
  else {
    i = a,
    s = n,
    c = i/t,
    d = s/o;
    var p = 1;
    switch (this.canvas_scale_method) {
      case b5.App.FitX: p = c;
      //Set pixel ratio to relation of canvas width and client width
        this.pixel_ratio = f.canvas.width/window.innerWidth;
        break;
      case b5.App.FitY: p = d;
      //Set pixel ratio to relation of canvas height and client height
        this.pixel_ratio = f.canvas.height/window.innerHeight;
        break;
      case b5.App.FitBest:
        p = c < d?c: d;
        this.pixel_ratio = +this.canvas.style.height.split('px')[0]<window.innerHeight? f.canvas.width/window.innerWidth : f.canvas.height/window.innerHeight;
        break;
      case b5.App.FitGreatest: p = i > s?c: d;
        break;
      case b5.App.FitSmallest: p = i < s?c: d;
        break;
      case b5.App.FitBest2: p = c > d?c: d;
    }
  this.canvas_scale = p*this.global_scale
  }var l = 0|i*this.pixel_ratio,
  y = 0|s*this.pixel_ratio;
  
  //Resolution changes wrongly when increasing/decreasing viewport
  //this.canvas.width = l,
  //this.canvas.height = y,
  this.canvas.style.width = i+'px',
  this.canvas.style.height = s+'px',
  this.canvas_cx = i/2,
  this.canvas_cy = s/2,
  this.display.stage.position.set(this.canvas.width>>1, this.canvas.height>>1);
  this.dirty()},
   b5.App.prototype.setDesignSize = function(e,t){
     var o = b5.app;
     o.design_width = e,
     o.design_height = t,
     o.display.stage.scale.set(b5.app.global_scale*(e>t?o.display_width/e:o.display_height/t));
     o.onResizeBase();
   },
   //NEW: App pause and resume
   b5.App.prototype.pause = function(e) {
     this.active=!1;
     !e && (this.paused=!0);
   },
   b5.App.prototype.resume = function() {
   	//Wait some time for animationFrame to respond
   	if(!this.active && this.visible)
   	  setTimeout(function() {
   		  var e = b5.app;
        e.active=!0;
        e.paused=!1;
        e.mainDraw();
   	  },750);
   }, b5.App.prototype.addTask = function(e, t, o, a, n) {
  return this.tasks.add(e, t, o, a, n)}, b5.App.prototype.removeTask = function(e) {
  this.tasks.remove(e)},
  b5.App.prototype.setTimeout = function(e,t) {
  	var o = Date.now();
  	this.addTask(o+'.timeout', t, 1, e);
  	return o +'.timeout'
}, b5.App.prototype.clearTimeout = function(e) {
	this.removeTask(e);
},
b5.App.prototype.initWorld = function(e, t, o) {
  if (this.box2d) {
    this.world = new Box2D.Dynamics.b2World(new Box2D.Common.Math.b2Vec2(e, t), o);
    this.world.m_sleep = !1;
    var a = new Box2D.Dynamics.b2ContactListener;
    a.BeginContact = function(e) {
      var t = e.GetFixtureA().GetBody().GetUserData(),
      o = e.GetFixtureB().GetBody().GetUserData();
      void 0 !== t.onCollisionStart && t.onCollisionStart(t,o,e),
      void 0 !== o.onCollisionStart && o.onCollisionStart(t,o,e)
    },
    a.EndContact = function(e) {
      var t = e.GetFixtureA().GetBody().GetUserData(),
      o = e.GetFixtureB().GetBody().GetUserData();
      void 0 !== t.onCollisionEnd && t.onCollisionEnd(t,o,e),
      void 0 !== o.onCollisionEnd && o.onCollisionEnd(t,o,e)
    },
    this.world.SetContactListener(a)}
}, 'use strict', b5.Scene = function() {
  this.app = null,
  this.actors = [],
  this.removals = [],
  this.data = {},
  this.world = null,
  this.timelines = new b5.TimelineManager(this),
  b5.ActionsListManager !== void 0 && (this.actions = new b5.ActionsListManager),
  this.tasks = new b5.TasksManager,
  this.events = new b5.EventsManager,
  //PIXI
  this.container = new PIXI.Container,
  this.container.id = "scene_container",
  this.container.sortableChildren = true;
  var e = this;
  this.container.onPreDraw = function() { e.onPreDraw && e.onPreDraw() },
  this.order_changed=!0,
  this.name = '',
  this.tag = '',
  this.tags = [],
  this.active=!0,
  this.visible=!0,
  this.layer = 0,
  this.x = 0,
  this.y = 0,
  this.absPos = {x:0,y:0},
  this.w = 1280,
  this.h = 720,
  this.scale = 1,
  this.scale_x = 1,
  this.scale_y = 1,
  this.clip_children=!0,
  this.focus_actor = null,
  this.clip_shape = null,
  this.camera_x = 0,
  this.camera_y = 0,
  this.camera_vx = 0,
  this.camera_vy = 0,
  this.vx_damping = 1,
  this.vy_damping = 1,
  this.follow_speed_x = .3,
  this.follow_speed_y = .3,
  this.target_x = null,
  this.target_y = null,
  this.touch_pan_x=!1,
  this.touch_pan_y=!1,
  this.panning=!1,
  this.min_panning = 0,
  this.world_scale = 20,
  this.time_step = 0,
  this.extents = [0,
    0,
    0,
    0],
  this.opacity = 1,
  this.accum_opacity = 1,
  this.frame_count = 0,
  this.touching=!1,
  this.touchmove=!1,
  this.bitmaps = [],
  this.brushes = [],
  this.shapes = [],
  this.materials = [],
  this.sounds = [],
  this.fonts = [],
  this.raw = [],
  this.shaders = []
 }, Object.defineProperty(b5.Scene.prototype, '_x', {
    get: function() {
      return this.x
    }, set: function(e) {
      this.x !== e && (this.x = e)}}), Object.defineProperty(b5.Scene.prototype, '_y', {
    get: function() {
      return this.y
    }, set: function(e) {
      this.y !== e && (this.y = e)}}), Object.defineProperty(b5.Scene.prototype, '_layer', {
    get: function() {
      return this.layer
    }, set: function(e) {
      this.layer !== e && (this.layer = e, this.app.order_changed=!0)}}), 
    Object.defineProperty(b5.Scene.prototype, '_av', {
    set: function(e) {
      this.visible = e, this.active = e
    }}), b5.Scene.prototype.release = function(t) {
  for (var e = 0;
    e < this.actors.length;
    e++)this.actors[e].release();
  this.onDestroy !== void 0 && this.onDestroy(),
  this.world = null;
}, b5.Scene.prototype.destroy = function() {
  this.app.removeScene(this),	this.container.destroy()}, b5.Scene.prototype.addActor = function(e) {
  return this.actors.push(e),
  e.scene = this,
  e.onAdded && e.onAdded(this),
  this.container.addChild(e.container),
  e.is_primary = !0,
  e
}, b5.Scene.prototype.removeActor = function(e) {
  this.removals.push(e),
	this.container.removeChild(e.container)
}, b5.Scene.prototype.removeActorsWithTag = function(e) {
  for (var o = this.actors, a = o.length, n = this.removals, r = 0;
    r < a;
    r++)o[r].tag === e && (n.push(o[r]), this.container.removeChild(o[r].container))
}, 
b5.Scene.prototype.removeAllActors = function() {
  for (var e = this.actors, o = e.length, a = this.removals, n = 0;
    n < o;
    n++)a.push(e[n]);
  this.container.removeChildren();
  this.layout_dirty=!0
},
b5.Scene.prototype.cleanupDestroyedActors = function() {
  var e = this.removals.length;
  if (0 < e)for (var o = this.removals, a = this.actors, n = a.length, r = 0, i;
    r < e;
    r++) {
    i = o[r];
    for (var c = 0;
      c < n;
      c++)if (i === a[c]) {
      i.release(),
      a.splice(c, 1),
      n--;
      break
    }}this.removals = []}, b5.Scene.prototype.findActor = function(e, o) {
  o === void 0 && (o=!1);
  for (var a = this.actors, n = a.length, r = 0;
    r < n;
    r++) {
    if (a[r].name === e)return a[r];
    if (o) {
      var i = a[r].findActor(e, o);
      if (null !== i)return i
    }}return null
}, b5.Scene.prototype.findActorById = function(e, o) {
  o === void 0 && (o=!1);
  for (var a = this.actors, n = a.length, r = 0;
    r < n;
    r++) {
    if (a[r].id === e)return a[r];
    if (o) {
      var i = a[r].findActorById(e, o);
      if (null !== i)return i
    }}return null
}, 
b5.Scene.prototype.findActorsByTagName = function(e, t) {
	t === void 0 && (t!=1);
  for (var a = this.actors, n = a.length, r = 0, o = [];
    r < n;
    r++){
    if (a[r].tag === e) o.push(a[r]);
    if(t) {
    	var s = a[r]?a[r].findActorsByTagName(e,t):null;
    	if(s) for(var c=0;c<s.length;c++)o.push(s[c]);
    }}
    return o;
},
b5.Actor.prototype.findActorsWithTagsName = function(e, t) {
	t === void 0 && (t!=1);
  for (var a = this.actors, n = a.length, r = 0, o = [];
    r < n;
    r++){
    if (a[r].tags.indexOf(e) !== -1) o.push(a[r]);
    if(t) {
    	var s = a[r]?a[r].findActorsWithTagsName(e,t):null;
    	if(s) for(var c=0;c<s.length;c++)o.push(s[c]);
    }}
    return o;
},
b5.Scene.prototype.bringToFront = function() {
  for (var e = this.app.scenes, o = e.length, a=-1, n = 0;
    n < o;
    n++)if (e[n] === this) {
    a = n;
    break
  }0 <= a && (e.splice(a, 1), e.push(this))}, b5.Scene.prototype.sendToBack = function() {
  for (var e = this.app.scenes, o = e.length, a=-1, n = 0;
    n < o;
    n++)if (e[n] === this) {
    a = n;
    break
  }0 <= a && (e.splice(a, 1), e.unshift(this))}, b5.Scene.prototype.onKeyPressBase = function(e) {
  this.onKeyPress !== void 0 && this.onKeyPress(e)}, b5.Scene.prototype.onKeyDownBase = function(e) {
  this.onKeyDown !== void 0 && this.onKeyDown(e)}, b5.Scene.prototype.onKeyUpBase = function(e) {
  this.onKeyUp !== void 0 && this.onKeyUp(e)}, b5.Scene.prototype.onBeginTouchBase = function(e,t) {
  this.touching=!0,
  this.onBeginTouch !== void 0 && this.onBeginTouch(e,t)}, b5.Scene.prototype.onEndTouchBase = function(e,t) {
  this.touching && this.onTapped !== void 0 && this.onTapped(e,t),
  this.touching=!1,
  this.touchmove=!1,
  this.onEndTouch !== void 0 && this.onEndTouch(e,t),
  this.panning=!1
}, b5.Scene.prototype.onMoveTouchBase = function(e,p,a) {
  if (this.touchmove=!0, void 0 !== this.onMoveTouch && this.onMoveTouch(e,p,a), this.touching) {
    var t = this.app,
    o = 0;
    this.touch_pan_x && (o = t.touch_drag_x, this.camera_vx = o*t.target_frame_rate, this.camera_x += o),
    this.touch_pan_y && (o = t.touch_drag_y, this.camera_vy = o*t.target_frame_rate, this.camera_y += o),
    t.touch_drag_x*t.touch_drag_x+t.touch_drag_y*t.touch_drag_y > this.min_panning && (this.panning=!0)}}, b5.Scene.prototype.onWheelBase = function(t) {
  this.onWheel !== void 0 && this.onWheel(t), this.focus_actor !== null && this.focus_actor.onWheel && this.focus_actor.onWheel(t)
 }, b5.Scene.prototype.initWorld = function(e, t, o) {
  if (this.app.box2d) {
    if (this.app.shared_world)return null === this.app.world && this.app.initWorld(e, t, o),
    void(this.world = this.app.world);
    this.world = new Box2D.Dynamics.b2World(new Box2D.Common.Math.b2Vec2(e, t), o);
    var a = new Box2D.Dynamics.b2ContactListener;
    a.BeginContact = function(e) {
      var t = e.GetFixtureA().GetBody().GetUserData(),
      o = e.GetFixtureB().GetBody().GetUserData();
			t.A_overlaps.indexOf(o) === -1 && t.A_overlaps.push(o);
			o.A_overlaps.indexOf(t) === -1 && o.A_overlaps.push(t);
      void 0 !== t.onCollisionStart && t.onCollisionStart(t,o,e),
      void 0 !== o.onCollisionStart && o.onCollisionStart(t,o,e)
    },
    a.EndContact = function(e) {
      var t = e.GetFixtureA().GetBody().GetUserData(),
      o = e.GetFixtureB().GetBody().GetUserData(),
      a = t.A_overlaps.indexOf(o),
      n = o.A_overlaps.indexOf(t);
      a !== -1 && t.A_overlaps.splice(a,1);
			n !== -1 && o.A_overlaps.splice(n,1);
      void 0 !== t.onCollisionEnd && t.onCollisionEnd(t,o,e),
      void 0 !== o.onCollisionEnd && o.onCollisionEnd(t,o,e)
    },
    this.world.SetContactListener(a)}
 }, b5.Scene.prototype.draw = function() {
    
    if(this.active && this.visible) {
    	b5.app.display.transformScene(this.container,
  	  this.x,
  	  this.y,
  	  this.container.width,
  	  this.container.height,
  	  this.rotation,
  	  this.scale,
  	  this.scale,
  	  this.ox,
  	  this.oy,
  	  this.skew_x,
  	  this.skew_y,
  	  void 0,
  	  this.visible && this.opacity,
  	  this.opacity,
  	  this.layer
  	);
  	this.absPos.x = this.x;
  	this.absPos.y = this.y;
  	for(var i = 0, c = this.actors; i<c.length;i++) c[i].draw();
   }

}, b5.Scene.prototype.baseUpdate = function(e) {
  if (!this.active)return!1;
  void 0 !== this.onTick && this.onTick(e),
  this.timelines.update(e),
  void 0 !== this.actions && this.actions.execute(),
  this.tasks.execute();
  for (var o = this.actors, a = o.length, n = 0;
    n < a;
    n++)o[n].update(e);
  if (null !== this.world && null === b5.app.world && !this.world.m_sleep) {
    var r = b5.app;
    if (0 === this.time_step)this.world.Step(e, r.physics_step, e.physics_step);
    else {
      var i = 1;
      r.adaptive_physics && (i = r.physics_step); //(i = 60/(1/r.adt)+.5<<0, 1 > i?i = 1: 3 < i && (i = 3));
      for (var n = 0;
        n < i;
        n++)this.world.Step(this.time_step/i, 1, 1)
    }
  //  null !== this.world && this.world.ClearForces()
  }return this.frame_count++,
  this.cleanupDestroyedActors(),
  this.order_changed && (this.order_changed=!1, b5.Utils.sortLayers(this.actors)),
  !0
}, b5.Scene.prototype.update = function(e) {
  return this.baseUpdate(e)},/* b5.Scene.prototype.updateCamera = function(e) {
  if (null !== this.target_x && (0 === this.follow_speed_x?(this.camera_x = this.target_x.x, this.camera_vx = 0): this.camera_vx += (this.target_x.x-this.camera_x)*this.follow_speed_x), null !== this.target_y && (0 === this.follow_speed_y?(this.camera_y = this.target_y.y, this.camera_vy = 0): this.camera_vy += (this.target_y.y-this.camera_y)*this.follow_speed_y), this.touching || (this.camera_x += this.camera_vx*e, this.camera_y += this.camera_vy*e, this.camera_vx *= this.vx_damping, this.camera_vy *= this.vy_damping), 0 !== this.camera_x || 0 !== this.camera_y) {
    var t = this.extents[2],
    o = this.extents[3],
    a = this.app.design_width,
    n = this.app.design_height;
    if (0 !== t && a <= t) {
      var r = a/2,
      i = this.extents[0]+r,
      s = this.extents[0]+t-r;
      this.camera_x < i && (this.camera_x = i, this.camera_vx = 0),
      this.camera_x > s && (this.camera_x = s, this.camera_vx = 0)}if (a > t && (this.camera_x = 0), 0 !== o && n <= o) {
      var c = n/2,
      d = this.extents[1]+c,
      p = this.extents[1]+o-c;
      this.camera_y < d && (this.camera_y = d, this.camera_vy = 0),
      this.camera_y > p && (this.camera_y = p, this.camera_vy = 0)}n > o && (this.camera_y = 0)}
  },*/ b5.Scene.prototype.findHitActor = function(e,i) {
  for (var o = this.actors, a = o.length, n = null, r = a-1;
    0 <= r;
    r--)if (n = o[r].hitTest(e,i), null !== n)return n;
  return n
}, b5.Scene.prototype.dirty = function() {
  for (var e = this.actors, o = e.length, a = 0;
    a < o;
    a++)e[a].dirty()}, b5.Scene.prototype.addResource = function(e, t, a) {
  if (t === void 0)throw'Resource type not specified';
  var o = b5.Utils.getResFromType(this, t);
  e.persist = a;
  null !== o && null === this.findResource(e.name, t) && (o.push(e), e.parent = this);
  return e;
}, b5.Scene.prototype.removeResource = function(e, o) {
  var a = b5.Utils.getResFromType(this, o);
  if (null !== a)for (var n = a.length, r = 0;
    r < n;
    r++)if (a[r] === e)return a.parent = null,
  void a.splice(r, 1), r.destroy&&r.destroy()}, 
  //NEW
  b5.Scene.prototype.removeResourceByName =	function(e,o){
   var a = b5.Utils.getResFromType(this, o);
    if (null !== a)for (var n = a.length, r = 0; r < n; r++)if (a[r].name == e)return a.parent = null, a[r].destroy(!0),
    void a.splice(r, 1);
  },
  
  b5.Scene.prototype.tryLoadNextResource = function() {
  	var e = [this.bitmaps,this.brushes,this.fonts,this.raw,this.sounds];
    for(var t=0;t<e.length;t++)
      for(var o=0; o<e[t].length;o++){var a = e[t][o];
        if(!a.loaded && !a.preload && !a.loading && a.load) return this.inline_loading_resource_name = a.name, a.load(), !0;
      }
    delete this.inline_loading_resource_name;
    return !1;
  },
  b5.Scene.prototype.loadResourcesOneByOne = b5.Scene.prototype.tryLoadNextResource,
  b5.Scene.prototype.loadResources = function() {
  	var e = [this.bitmaps,this.brushes,this.fonts,this.raw,this.sounds];
    for(var t=0;t<e.length;t++)
      for(var o=0; o<e[t].length;o++) {
      	let a = e[t][o];
      	!a.loading && !a.loaded && (a.preload = !0, a.load && a.load());
      }
  },
  
  b5.Scene.prototype.playTimeline = function(e) {
  this.active || (this.active=!0, this.visible=!0);
  var t = this.timelines.find(e);
  null !== t && t.restart()}, b5.Scene.prototype.addTask = function(e, t, o, a, n) {
  return this.tasks.add(e, t, o, a, n)}, b5.Scene.prototype.removeTask = function(e) {
  this.tasks.remove(e)
  }, 
  /*New*/
  b5.Scene.prototype.setTimeout = function(e,t) {
  	var o = this.name+'.timeout-'+b5.app.now;
  	this.addTask(o, t, 1, e, this);
  	return o
}, 
b5.Scene.prototype.clearTimeout = b5.Scene.prototype.removeTask,
b5.Scene.prototype.setInterval = function(e,t) {
	var o = this.name+'.interval-'+b5.app.now;
	this.addTask(o, 0, Infinity, e, this).wait=t;
	return o
},
b5.Scene.prototype.clearInterval = b5.Scene.prototype.removeTask,
b5.Scene.prototype.findResource = function(e, o) {
  var a = b5.Utils.getResFromType(this, o);
  if (null === a)return null;
  for (var n = a.length, r = 0;
    r < n;
    r++)if (a[r].name === e)return a[r];
  return null}, b5.Scene.prototype.areResourcesLoaded = function(e) {
    //Resources loaded detection is bad. Fixing it.
    for (var o = this.bitmaps, a = o.length, n = 0;
    n < a;
    n++)if(!o[n].loaded)return !1;
  for (o = this.sounds, a = o.length, n = 0;
    n < a;
    n++)if(!o[n].loaded)return !1;
  for (o = this.fonts, a = o.length, n = 0;
    n < a;
    n++)if(!o[n].loaded)return !1;
  for (o = this.raw, a = o.length, n = 0;
    n < a;
    n++)if(!o[n].loaded)return !1;
  for (o = this.shaders, a = o.length, n = 0;
    n < a;
    n++)if(!o[n].loaded)return !1;
  return !0;
}, b5.Scene.prototype.destroyAllResources = function() {
	var t = [this.bitmaps,this.brushes,this.fonts,this.raw,this.sounds,this.shaders];
    for(var o=0;o<t.length;o++) 
      for(var r=0;t[o].length>r;) !t[o][r].persist ? t[o][r].destroy() : r++;
}, b5.Scene.prototype.countResourcesNeedLoading = function() {
  for (var e = 0, o = this.bitmaps, a = o.length, n = 0;
    n < a;
    n++)o[n].preload && e++;
  for (o = this.sounds, a = o.length, n = 0;
    n < a;
    n++)o[n].preload && e++;
  for (o = this.fonts, a = o.length, n = 0;
    n < a;
    n++)o[n].preload && e++;
  for (o = this.raw, a = o.length, n = 0;
    n < a;
    n++)o[n].preload && e++;
  for (o = this.shaders, a = o.length, n = 0;
    n < a;
    n++)o[n].preload && e++;
  return e
}, //New
 b5.Scene.prototype.getLoadingResources = function() {
	var t = [this.bitmaps,this.fonts,this.raw,this.sounds,this.shaders],
	i = [];
    for(var o=0;o<t.length;o++) 
      for(var r=0;r<t[o].length;r++) !t[o][r].loaded && i.push(t[o][r]);
  return i;
 },
 b5.Scene.prototype.countLoadedResources = function() {
  for (var e = 0, o = this.bitmaps, a = o.length, n = 0;
    n < a;
    n++)o[n].loaded && e++;
  for (o = this.sounds, a = o.length, n = 0;
    n < a;
    n++)o[n].loaded && e++;
  for (o = this.fonts, a = o.length, n = 0;
    n < a;
    n++)o[n].loaded && e++;
  for (o = this.raw, a = o.length, n = 0;
    n < a;
    n++)o[n].loaded && e++;
  for (o = this.shaders, a = o.length, n = 0;
    n < a;
    n++)o[n].loaded && e++;
  return e
 },
 b5.Scene.prototype.countLoadableResources = function() {
 	return this.bitmaps.length + this.sounds.length + this.fonts.length + this.raw.length + this.shaders.length;
 },
 b5.Scene.prototype.addFilter = function(e) {
	var t = this.container;
	t.filters === null && (t.filters = []);
	t = t.filters;
	t.indexOf(e) === -1 && t.push(e);
},
b5.Scene.prototype.removeFilter = function(e) {
	var t = this.container.filters, o;
	null !== t && (o = t.indexOf(e), void 0 === e ? t.splice(0) : o != -1 && t.splice(o,1));
},
'use strict', b5.Maths = function() {}, b5.Maths.mulMatrix = function(e, t) {
  var o = t[0],
  a = t[1],
  n = t[2],
  r = t[3],
  i = t[4],
  s = t[5],
  c = e[0],
  d = e[1],
  p = e[2],
  l = e[3],
  y = e[4],
  _ = e[5];
  e[0] = o*c+n*d,
  e[1] = a*c+r*d,
  e[2] = o*p+n*l,
  e[3] = a*p+r*l,
  e[4] = o*y+n*_+i,
  e[5] = a*y+r*_+s
}, b5.Maths.preMulMatrix = function(e, t) {
  var o = e[0],
  a = e[1],
  n = e[2],
  r = e[3],
  i = e[4],
  s = e[5],
  c = t[0],
  d = t[1],
  p = t[2],
  l = t[3],
  y = t[4],
  _ = t[5];
  e[0] = o*c+n*d,
  e[1] = a*c+r*d,
  e[2] = o*p+n*l,
  e[3] = a*p+r*l,
  e[4] = o*y+n*_+i,
  e[5] = a*y+r*_+s
},
b5.Maths.vecMulMatrix = function(e, t, o) {
  var a = e*o[0]+t*o[2]+o[4],
  n = e*o[1]+t*o[3]+o[5];
  return {
    x: a,
    y: n
  }
},
//New: More random number functions
b5.Maths.randomRange = function(min, max, float) {
	var e = float ? function(n) {return n} : Math.round;
  return min + e(Math.random()*(max-min));
};
b5.Maths.randomChance = function(prcnt) {
  return prcnt + Math.random() > 1 ? 1 : 0;
}, 
//Utilities
b5.Maths.radToDeg = function(rad) {
	return rad * b5.Maths.RtoDeg;
},
b5.Maths.degToRad = function(deg) {
	return deg * b5.Maths.DtoRad;
},
b5.Maths.cap = function(e, t, o) {
	e > o ? e = o : e < t && (e = t);
	return e;
},
b5.Maths.clamp = b5.Maths.cap,
b5.Maths.distance = function(e,t,o,a) {
	var n = e-o,
  r = t-a;
  return Math.sqrt(n*n+r*r)
},
b5.Maths.distanceFast = function(e,t,o,a) {
	var n = e-o,
  r = t-a;
  return n*n+r*r;
},
b5.Maths.posAngle = function(x1,y1,x2,y2) {
	return -Math.atan2(y1-y2,x2-x1);
},
b5.Maths.interp = function(x,y,speed) {
	return x -= Math.atan(x-y)*speed;
},
b5.Maths.interpAngle = function(e,t,speed) {
	var o = Math.PI;
	e += o;
	t += o;
	//Snap
  if(t < e - o) e -= o*2;
	if(t > e + o) e += o*2;
  return e -= Math.atan(e-t)*speed, e - o;
},
b5.Maths.vecDotProd = function(p1,p2) {
	return (p1.x*p2.x) + (p1.y*p2.y);
},
b5.Maths.pos = function(a,b,p) {
	return a + (b-a)*p;
},
b5.Maths.fract = function(n) {
	return Math.abs(n - Math.round(n));
},
b5.Maths.even = function(n) {
	return this.fract(n/2) == 0.5 ? 0 : 1;
},
b5.Maths.DtoRad = Math.PI/180,
b5.Maths.RtoDeg = 180/Math.PI,
'use strict', b5.Display = {}, 
b5.Display.getWidth = function() {
  return document.documentElement.clientWidth
}, b5.Display.getHeight = function() {
  return document.documentElement.clientHeight
},
b5.Display.setBackgroundColor = function(e){
  document.body.style.backgroundColor = e;
},
/* Display methods not needed anymore */
b5.App.prototype.setFilters = function(e) {
  var t = '';
  for(var i in e) 
    switch(i) {
      case 'blur': 
        e[i] != 0 && (t += i+'('+ (+e[i] || 0) +'px) '); break;
      case 'hue': 
        e[i] != 0 && (t += i+'-rotate('+ (+e[i] || 0) +'deg) '); break;
      case 'brightness': 
      case 'contrast': 
      case 'saturate': 
        //Default to 100%
        e[i] != 1 && (t += i+'('+ Math.round(e[i]*100 || 100) +'%) '); break;
      case 'grayscale':
      case 'invert': 
      case 'sepia': 
        //Default to 0%
        e[i] != 0 && (t += i+'('+ (e[i]*100 || 0) +'%) '); break;
    };
  return this.filters = e, this.canvas.style.filter = t, t;
},
// This is for	PIXIJS
b5.App.prototype.addFilter = function(e) {
	var t = this.display.stage;
	t.filters === null && (t.filters = []);
	t = t.filters;
	t.indexOf(e) === -1 && t.push(e);
},
b5.App.prototype.removeFilter = function(e) {
	var t = this.display.stage.filters, o;
	null !== t && (o = t.indexOf(e), void 0 === e ? t.splice(0) : o != -1 && t.splice(o,1));
},
b5.App.prototype.setInterval = function(e,t) {
	var o = (b5.app.now+Math.random()).toString();
	this.addTask(o, 0, Infinity, e, this).wait = t;
	return o
},
b5.App.prototype.clearInterval = b5.App.prototype.removeTask,
'use strict', b5.Raw = function(e, t, o, a, n) {
	 this.data = null,
	 this.parent = null,
	 this.name = e,
	 this.type = 'raw',
	 this.location = t,
	 this.onload = a,
	 this.preload = o,
	 this.loaded=!1,
	 this.loading=!1,
	 this.load_retry = 0,
	 this.sync = n,
	 o && this.load();
}, b5.Raw.prototype.load = function() {
  var e = this;
  e.loading = !0;
  b5.Utils.loadRAW(this.location, !this.sync, function(t) {
    e.data = t, null === t?(e.load_retry++, 3 < e.load_retry?(b5.app.onResourceLoaded(e, !0), e.onload && e.onload(t,!1)): e.load()): (b5.app.onResourceLoaded(e, !1), e.onload && e.onload(t,!0))}, !1)
}, 
b5.Raw.prototype.destroy = function() {
  this.data = null,
  null !== this.parent && this.parent.removeResource(this, 'raw')
  for(var i in this)this[i]=null;
}, 
'use strict', 
//From this line to 3420 there were a lot of garbage code, it looked like a screen to visualize default fonts, but since fonts can be drawn directly to canvas this is not needed. Looks like this is used in the b5 game maker engine
/*
* 3386 to 3414 was b5.Font, not needed anymore, use ImageAtlas in LabelActor as its font
*/
  /* B5.BITMAP PIXIJS MERGED */
  
  b5.Bitmap = function(e, t, o, a) {
	this.texture = typeof t === 'string' || t instanceof ImageBitmap ? PIXI.Texture.from(t) : typeof t === 'object' ? t : t === !1 ? PIXI.Texture.WHITE : PIXI.Texture.EMPTY;
	var n = (this.texture instanceof PIXI.RenderTexture) || (this.texture instanceof PIXI.Texture) || this.texture === PIXI.Texture.WHITE,
	r = (b5.app && b5.app.texture_resolution),
	i = this.resource = this.texture.baseTexture && this.texture.baseTexture.resource;
	i && (
		i.alphaMode = PIXI.ALPHA_MODES.UNPACK,
		i.preserveBitmap = !0,
		i.bitmapFromImage = !1,
		i.fastResize = b5.app ? b5.app.fast_texture_decoding : !1,
		i.resolution = r || 1
  );
	this.image = (i||{}).source || !n,
	this.parent = null,
	this.name = e,
	this.type = "bitmap",
	this.resolution = r,
	this.location = t,
	this.onload = a,
	this.preload = !0;
	this.loaded=!1,
	this.loading=!0,
	this.load_retry = 0,
	this.load();
},
b5.Bitmap.prototype.load = function() {
	//Pixijs baseTexture: Instantly loads when creating it...
	let e = this;
	this.image.addEventListener('load', function() {
 // e.resource._onLoad$1 = () => {
		if(!e.loaded) {
			e.loaded_internal = !0;
			e.resolution = e.resource ? e.resource.resolution : b5.app.texture_resolution,
			b5.app && b5.app.onResourceLoaded(e, !1),
			e.onload && e.onload(e, !0);
		}
	},!1);
	this.image.addEventListener('error',function(o) {
 // e.resource._onError$1 = () => {
		if(!e.loaded) {
			e.loaded_internal = !0;
			b5.app && b5.app.onResourceLoaded(e, !0), 
			e.onload && e.onload(e, !1);
		}
	},!1);
},
b5.Bitmap.prototype.upload = function() {
	//Create a sprite to upload the texture
	var e = this;
	e.cache = new PIXI.Sprite(e.texture),
	e.cache.width=e.cache.height=1,
	e.cache.position.set(-640+(Math.random()*1200),-360+(Math.random()*700)),
	e.cache.zIndex=9;
	b5.app.display.stage.addChild(e.cache);
	setTimeout(function() {
		e.cache.destroy();
		delete e.cache;
	}, 100);
},
b5.Bitmap.prototype.unload = function() {
	this.texture.baseTexture.dispose();
},
b5.Bitmap.prototype.destroy = function() {
	null !== this.parent && this.parent.removeResource(this, 'bitmap');
	//Delete object data to save memory (via GC)
	PIXI.BaseTexture.removeFromCache(this.texture.baseTexture);
	this.texture.baseTexture.destroy();
	this.texture.destroy();
	this.cache && this.cache.destroy();
	for (var i in this) this[i] = null;
},
b5.Bitmap.SOLID = new b5.Bitmap('SOLID',!1),
'use strict',
b5.Gradient = function(e, t) {
  this.parent = null, this.stops = void 0 === t?[]: t, this.name = e
}, b5.Gradient.prototype.addColourStop = function(e, t) {
  this.stops.push({
    c: e, offs: t
  })}, b5.Gradient.prototype.getColourStop = function(e) {
  return this.stops[e]}, b5.Gradient.prototype.getMaxStops = function() {
  return this.stops.length
}, b5.Gradient.prototype.destroy = function() {
  null !== this.parent && this.parent.removeResource(this, 'brush');
  //Delete object data to save memory (via GC)
  for(var i in this) this[i]=null;
}, b5.Gradient.prototype.createStyle = function(e, o, a, n) {
  if (this.stops !== void 0) {
    var r = 0,
    i = 0,
    c = 1,
    d = 0;
    a !== void 0 && (r = a.x, i = a.y),
    n !== void 0 && (c = n.x, d = n.y),
    r = r*e-e/2,
    i = i*o-o/2,
    c = c*e-e/2,
    d = d*o-o/2;
    var p = void 0 === this.rad_pos?b5.app.display.context.createLinearGradient(r, i, c, d): b5.app.display.context.createRadialGradient(this.rad_pos[0]*e, this.rad_pos[1]*e, this.rad_radius[0]*e, this.rad_pos[2]*e, this.rad_pos[3]*e, this.rad_radius[1]*e);
    for (var l = 0, y;
      l < this.stops.length;
      l++)y = this.stops[l],
    p.addColorStop(y.offs, y.c);
    return p
  }return null
}, 'use strict', 
  /* B5.IMAGEATLAS PIXIJS MERGED */
b5.ImageAtlas = function(e, t, o, a, n, r, i, s, c) {
  this.frames = [],
  this.anims = {},
  this.parent = null,
  this.name = e,
  this.type = "brush",
  this.bitmaps = t ? t : [],
  o !== void 0 && a !== void 0 && n !== void 0 && r !== void 0 && this.addFrame(o, a, n, r, i, s, c)}, 
 b5.ImageAtlas.prototype.addFrame = function(i, e, t, o, a, n, r, s) {
  n === void 0 && (n = 0),
  r === void 0 && (r = 0),
  s === void 0 && (s = ""),
  this.frames.push({
    bitmap: i, x: e, y: t, w: o, h: a, ox: n, oy: r, name: s})},
  /* New: CSV/BFT frame table */
  b5.ImageAtlas.prototype.parseFrames = function(e,s,c) {
  //	!c && (this.frames = []);
  	if(!s) {
  		var t = e.replace(/\r/g,'\n').replace(/\n\n/g,'\n').split('\n'),
		 	o = t[0].split(','), r;
		 	for(var i = 1, a = o.length; i < t.length; i++) {
  			t[i].trim() !== "" && !t[i].startsWith("#") && (
  		  r = t[i].indexOf('\\n') != -1 ? t[i].split('\\n') : t[i].split(','),
  			this.addFrame(+r[0], +r[1], +r[2], +r[3], +r[4], +r[5] || 0, +r[6] || 0, r[7])
  			);
  		}
  	}
  	else {
  		var t = JSON.parse(e).generate;
  		for(var i = 0; i < t.length; i++)
  			for(var a = 0, b = t[i]; a < b.atlases.length; a++) this.generate(b.atlases[a],b.frame.x,b.frame.y,b.frame.w,b.frame.h,b.frames_h,b.frames_v,b.frame_count);
  	}
  	this.max_frame = this.getMaxFrame();
  	
  },
  b5.ImageAtlas.prototype.printFrames = function(asBitmapFont) {
  	for(var i = 0, n = !!asBitmapFont, e = 'bitmap, x, y, w, h, ox, oy, '+(n?'character':'name')+'\n', t = this.frames; i < t.length;i++) {
  		var o = t[i],
  		a = n ? '\\n' : ',';
  		e += o.bitmap+a+o.x+a+o.y+a+o.w+a+o.h+a+o.ox+a+o.oy+a+o.name+'\n';
  	}
  	return e;
  },
  b5.ImageAtlas.prototype.parseAnims = function(e) {
  	var t = JSON.parse(e);
  	for(var i in t) this.addAnim(i,t[i].indices || t[i].frames,t[i].speed);
  },
  b5.ImageAtlas.prototype.getFrame = function(e) {
  return this.frames[e]||this.frames[0]
  }, b5.ImageAtlas.prototype.getMaxFrame = function() {
    for(var i=0,e=this.frames,t=0,o=0;i<e.length;i++) {
    	e[i].w > t && (t=e[i].w);
    	e[i].h > o && (o=e[i].h);
    }
    return {
    	w: t,
    	h: o
    }
  }, 
  //New: get frame by name
  b5.ImageAtlas.prototype.getFrameByName = function(e,o) {
  	for(var i=0,t=this.frames;i<t.length;i++) if(t[i].name === e)return o ? i : t[i];
  },
 //New: get bitmaps
  b5.ImageAtlas.prototype.getBitmap = function(e){
   return this.bitmaps[e]},
 //New: count indices (return a list of indices) for all frames if anim=null, else return anim indices
  b5.ImageAtlas.prototype.getIndices = function(d) {
    var c = [];
    if(!d){ for(var i = 0, a = this.frames, b = a.length; i < b; i++)
      c.push(i);
    return c;
    } else return this.anims[d].indices;
  }, b5.ImageAtlas.prototype.addAnim = function(e, t, o) {
   this.anims[e] = {
    indices: t?t:this.getIndices(), //Add all frames if no indices
    speed: o
  }},
  b5.ImageAtlas.prototype.getAnim = function(e) {
    return this.anims[e]}, 
  b5.ImageAtlas.prototype.listAnims = function() {
  	var e = [];
  	for(var i in this.anims) e.push(i);
    return e;
  }, b5.ImageAtlas.prototype.generate = function(b, e, t, o, a, n, r, i) {
  i === void 0 && (i = n*r);
  for (var s = t, c = 0, d;
    c < r;
    c++) {
    d = e;
    for (var p = 0;
      p < n;
      p++)if (this.addFrame(b, d, s, o, a, 0, 0), d += o, i--, 0 >= i)return;
    s += a
  }}, b5.ImageAtlas.prototype.destroy = function() {
  null !== this.parent && this.parent.removeResource(this, 'brush');
  //Delete object data to save memory (via GC)
   for(var i=0;i<this.frames;i++)this.frames[i]=null;
   for(var i in this) this[i]=null;
 },
 
'use strict', b5.Material = function(e) {
  this.parent = null,
  this.name = e,
  this.type = 'material',
  this.type = 'static',
  this.density = 1,
  this.friction = .1,
  this.restitution = .1,
  this.gravity_scale = 1,
  this.fixed_rotation=!1,
  this.is_bullet=!1,
  this.is_sensor=!1
}, b5.Material.prototype.destroy = function() {
  null !== this.parent && this.parent.removeResource(this, 'material');
  for(var i in this) this[i]=null;
}, 'use strict', b5.Shape = function(e) {
  this.parent = null,
  this.name = e,
  this.type = 'shape',
  this.type = b5.Shape.TypeBox,
  this.width = 0,
  this.height = 0,
  this.vertices = [],
  this.convexVertices = []}, b5.Shape.TypeBox = 0, b5.Shape.TypeCircle = 1, b5.Shape.TypePolygon = 2, b5.Shape.prototype.typeToConst = function() {
  if ('polygon' === shape.type)return b5.Shape.TypePolygon;
  return'circle' === shape.type?b5.Shape.TypeCircle: b5.Shape.TypeBox
}, b5.Shape.prototype.remove = function() {
  null !== this.parent && this.parent.removeResource(this, 'shape');
  for(var i in this) this[i]=null;
}, 'use strict',
/*** NEW!! ***/
b5.Shader = function(n, loc, asyncLoad) {
	this.name = n,
	this.type = "shader",
	this.loaded = !1,
	this.loading = !0,
	this.preload = !0,
	this.location = loc;
	this.filter = null;
	asyncLoad !== void 0 && this.load(asyncLoad);
},
b5.Shader.prototype.load = function(a) {
	b5.Utils.loadRAW(this.location, a, ish => {
	 if(ish === null) return b5.app.onResourceLoaded(this, !0), this.onload && this.onload(this.filter, !1);
	 var i = b5.Shader.ParseIniShader(ish),
	 o = i.uniforms && JSON.parse(i.uniforms);
	 if(o) for(var n in o) o[n] === "TEX" && (o[n] = PIXI.Texture.WHITE);
	 this.filter = new PIXI.Filter(!!i.vertex ? i.vertex : null, !!i.fragment ? i.fragment : null, o);
	 if(i.options && (i.options = JSON.parse(i.options))) for(var b in this.filter) i.options[b] !== void 0 && (this.filter[b] = i.options[b]);
	 
	 for(let e in this.filter.uniforms) Object.defineProperty(this, e, {
	 	get: function() { return this.filter.uniforms[e]},
	 	set: function(t) { this.filter.uniforms[e] = t}
	 });
	 b5.app.onResourceLoaded(this, !1);
	 this.onload && this.onload(this, !0);
	});
},
b5.Shader.prototype.destroy = function() {
	null !== this.parent && this.parent.removeResource(this, 'shader');
	this.filter.destroy();
	//for(var i in this)this[i] = null;
},
b5.Shader.ParseIniShader = function(s) {
	var e = s.split('\n');
	for(var i = 0, c = "", t = {}; i < e.length; i++) {
		var a = e[i],
		b = a.startsWith('[/');
		a.startsWith('[') && a.endsWith(']') && !b ? (c = a.substr(1,a.length-2), t[c] = "")
		: b ? t[c] = t[c].substr(0,t[c].length-1) : t[c] += a+'\n';
	}
	return t;
},
'use strict', 
b5.Utils = function() {}, 
b5.Utils.loadRAW = function(e, t, o, a) {
  var n = new XMLHttpRequest;
  n.open('GET', e, t),
  e.endsWith('.json') && n.overrideMimeType('application/json'),
  a && (n.responseType = 'arraybuffer'),
  n.onload = r => o(n.response);
  n.onerror = r => o(null);
  try {
    n.send()}catch(t) {
    return!1
  }
  return !0
},
b5.Utils.loadJS = function(e) {
  var t = document.createElement('script'); 
  t.setAttribute('type', 'text/javascript'),
  t.setAttribute('src', e),
  'undefined' != typeof t && document.getElementsByTagName('head')[0].appendChild(t);
	return t;
}, b5.Utils.SendGetRequest = function(e, t) {
  var o = new XMLHttpRequest;
  o.onreadystatechange = function() {
    t != null && t(o)},
  o.open('GET', e, !0),
  o.send()}, b5.Utils.SendPostJSONRequest = function(e, t, o) {
  var a = new XMLHttpRequest;
  a.open('POST', e, !0),
  a.setRequestHeader('Content-Type', 'application/json'),
  a.onreadystatechange = function() {
    o != null && o(a)},
  a.send(JSON.stringify(t))}, b5.Utils.findObjectFromPath = function(e, o) {
  var a = e.split('.'),
  n = a.length;
  if (0 === n)return null;
  var r = b5.app.findScene(a[0]);
  if (1 === n && void 0 === o)return r;
  if (1 < n) {
    if (void 0 === o) {
      for (var i = 1;
        i < n;
        i++)r = r.findActor(a[i]);
      return null === r?(b5.app.debug && console.log('Warning: Could not resolve object with path\''+e+'\''), null): r
    }var s = o.charAt(0);
    if ('t' == s && 'timeline' === o) {
      for (var i = 1;
        i < n-1;
        i++)r = r.findActor(a[i]);
      return null === r?(b5.app.debug && console.log('Warning: Could not resolve timeline with path\''+e+'\''), null): r.timelines.find(a[n-1])}if ('a' == s && 'actions' === o) {
      for (var i = 1;
        i < n-1;
        i++)r = r.findActor(a[i]);
      return null === r?(b5.app.debug && console.log('Warning: Could not resolve actions with path\''+e+'\''), null): r.actions.find(a[n-1])}}return b5.app.debug && console.log('Warning: Could not resolve object with path\''+e+'\''),
  null
}, b5.Utils.findResourceFromPath = function(e, t) {
  var o = e.split('.'),
  a = o.length;
  if (0 === a)return null;
  var n = b5.app;
  1 < a && (n = b5.app.findScene(e));
  var r = n.findResource(o[a-1], t);
  return null === r?(b5.app.debug && console.log('Warning: Could not resolve resource for path\''+e+'\''), null): r
}, b5.Utils.resolveObject = function(e, t) {
  return void 0 === e?null: 'string' == typeof e?b5.Utils.findObjectFromPath(e, t): e
}, b5.Utils.resolveResource = function(e, t) {
  return void 0 === e?null: 'string' == typeof e?b5.Utils.findResourceFromPath(e, t): e
}, b5.Utils.getResFromType = function(e, t) {
	switch(t) {
		case 'brush': return e.brushes;
		case 'bitmap': return e.bitmaps;
		case 'sound': return e.sounds;
		case 'shape': return e.shapes;
		case 'shader': return e.shaders;
		case 'material': return e.materials;
		case 'raw': return e.raw;
		case 'font': return e.fonts;
		default: return null;
	}
}, b5.Utils.sortLayers = function(e) {
  var o = e.length, a, n;
  for (n = 0; n < o; n++)
    for (a = n+1; a < o; a++)
      if (e[n].layer > e[a].layer) {
        var r = e[n];
        e[n] = e[a],
        e[a] = r
  }}, b5.Utils.CreateCanvas = function(e, t, o, a) {
  var n = document.createElement('canvas');
  return n.id = e,
  n.width = t,
  n.style.width = t+'px',
  n.height = o,
  n.style.height = o+'px',
  n.style.zIndex = a,
  n.style.position = 'fixed',
  n.style.left = 0,
  n.style.top = 0,
  n.style.right = 0,
  n.style.bottom = 0,
  n.style.margin = 'auto',
  n.style.pointerEvents = 'auto',
  n.style.visibility = 'visible',
  document.body.appendChild(n),
  n
}, b5.Utils.GetDevicePixelRatio = function() {
  if (window.devicePixelRatio !== void 0)return window.devicePixelRatio;
  var e = window.screen;
  return e !== void 0 && e.systemXDPI !== void 0 && e.logicalXDPI !== void 0 && e.systemXDPI > e.logicalXDPI?e.systemXDPI/e.logicalXDPI: 1
}, b5.Utils.GetBackingStorePixelRatio = function(e) {
  return e.webkitBackingStorePixelRatio || e.mozBackingStorePixelRatio || e.msBackingStorePixelRatio || e.oBackingStorePixelRatio || e.backingStorePixelRatio || 1
}, b5.Utils.RunafterTime = function(e, t, o) {
  b5.app.addTask('', e, 1, t, o)}, b5.Utils.SetFullscreen = function(e) {
  document.fullscreenEnabled && (e?null == document.fullscreenElement && document.body.requestFullscreen(): null != document.fullscreenElement && document.exitFullscreen())}, 
  //Simplifying
  b5.Utils.IsMobile = function() {
  return !!navigator.userAgent.match(/Android|iPhone|iPad|iPod|BlackBerry|Opera Mini|IEMobile/i);
  }, b5.Utils.GetPlatform = function() {
  var e = navigator.userAgent;
  return e.match(/Android/i)?'ANDROID'
  : e.match(/BlackBerry/i)?'BLACKBERRY'
  : e.match(/iPhone|iPad|iPod/i)?'IOS'
  : e.match(/Opera Mini/i)?'OPERA'
  : e.match(/Windows/i)?'WINDOWS'
  : e.match(/iMac/i)?'MACOS'
  : e.match(/Linux/i)?'LINUX'
  : 'WEB'
}, 
b5.Utils.GetLanguage = function() {
	var t = navigator.language.split("-");
  return {language: t[0], region: t[1]};
},
b5.Utils.GetScreenRefreshRate = function(e) {
 var t=self.requestAnimationFrame;
 t(function(o){
 t(function(a){e&&e(Math.round(1e3/(a-o))); })});
},
b5.Utils.GetCenterPos = function(e,t,o,a) {
  return { left: (e/2)-(o/2), top: (t/2)-(a/2) }
},
b5.Utils.FileToObjectURL = function(e,t) {
  fetch(e).then(function(r){ 
    r.blob().then(function(blob){
      t && t(URL.createObjectURL(blob));
    })});
},
b5.Utils.HasTouchscreen = function() {
  return 'ontouchstart' in document;
},
b5.Utils.GetOrientation = function() {
  return (screen.orientation||{}).type || "";
},
b5.Utils.SetOrientation = function(e) {
	e ? screen.orientation.lock(e).catch(a=>{
		console.warn(a.message);
	}) : screen.orientation.unlock().catch(a=>{
		console.warn(a.message);
	});
},
/* Back button Override (Mobile platforms only)*/
b5.Utils.SetBackButtonEnabled = function(e) {
  var t = () => { b5.Utils.IsMobile() && history.pushState('back-button-override',null)};
  !e ? (
    history.length < 2 && t(),
  	window.onpopstate = t
  ) : (window.onpopstate = null, history.length > 1 && history.back())
},
b5.Utils.pickFile = function(e,t,a,n) {
	void 0 === t && (t = "");
	var o = document.createElement('input');
	o.type = 'file',
	o.accept = t,
	o.multiple = !!e,
	o.onabort = n,
	o.click(),
	o.oninput = ()=>{a && a(o.files)};
},
b5.Utils.saveFile = function(e,t) {
	var o = document.createElement('a');
	o.href = t,
	o.download = e,
	o.target = '_blank',
	o.click();
},
b5.Utils.overlapTest = function(z,l) {
  var t = z.x,
  o = z.y,
  a = z.w/2,
  n = z.h/2,
  r = l.x,
  i = l.y,
  s = l.w/2,
  c = l.h/2;
  return t-a < r+s && t+a > r-s && o-n < i+c && o+n > i-c
},
b5.Utils.getStatusCodeString = function(e) {
	var t = {
    '1000': 'Normal Closure',
    '1001': 'Going Away',
    '1002': 'Protocol Error',
    '1003': 'Unsupported Data',
    '1004': '(For future)',
    '1005': 'No Status Received',
    '1006': 'Abnormal Closure',
    '1007': 'Invalid frame payload data',
    '1008': 'Policy Violation',
    '1009': 'Message too big',
    '1010': 'Missing Extension',
    '1011': 'Internal Error',
    '1012': 'Service Restart',
    '1013': 'Try Again Later',
    '1014': 'Bad Gateway',
    '1015': 'TLS Handshake'
  };
  if (e >= 0 && e <= 999) {
  	return '(Unused)';
  } else if (e >= 1016) {
      if (e <= 1999) {
          return '(For WebSocket standard)';
      } else if (e <= 2999) {
          return '(For WebSocket extensions)';
      } else if (e <= 3999) {
          return '(For libraries and frameworks)';
      } else if (e <= 4999) {
          return '(For applications)';
      }
  }
  if (typeof(t[e]) !== 'undefined') {
      return t[e];
  }
  return '(Unknown)';
},
b5.Utils.GetLocalIPAddress = function(){return ""},
b5.Utils.measureTextLengthWidth = function(e) {
	var t = e.split('\n');
	for(var i = 0, o = 0; i < t.length; i++) o < t[i].length && (o = t[i].length);
	return o;
},
'use strict',
b5.Utils.createRandomMovement = function(length, tangent) {
var maths = ["cos",
"sin"],
ops = ["-",
"+",
'*'],
f = "";
tangent && maths.push('tan');
for (var i = 0; i < length; i++) {
var nextop = i == length-1 ? ' ': ops[b5.Maths.randomRange(0, 2)],
nextop2 = ops[b5.Maths.randomRange(0, 1)],
randomultin = 0.001 + Math.random(),
randomultout = 0.0001 + Math.random()*0.1,
randomultin2 = 0.001 + Math.random(),
randomultout2 = 0.0001 + Math.random()*0.1,
randomath = "Math." + maths[b5.Maths.randomRange(0, maths.length-1)] + "(",
randomath2 = "Math." + maths[b5.Maths.randomRange(0, maths.length-1)] + "(";
f += randomath + "i * " + randomultin + nextop2+randomath2 +" i*" + randomultin2 + ")+"+randomultout2 + ")*"+randomultout + nextop;
}
return Function("return function(i){ return "+f+";}")();
},
b5.Utils.InstanceOf = function(e) {
	return String(e).replace(/\[object |\]/g,'');
},
b5.Utils.DisposeAtlasTextures = function(e) {
	for(var i = 0; i < e.bitmaps.length; i++) e.bitmaps[i].unload();
},
b5.Utils.PickChance = function (values,probas) {
	//https://stackoverflow.com/questions/3983660/probability-in-javascript-help
	var arr = [],
	i, sum = 0,
	r = Math.random();
	//Probabilities range from 0 to 1
	
	//Cumulative distribution
	for (i=0; i<probas.length-1; i++) {
    sum += probas[i];
    arr[i] = sum;
  }
  //Pick index
  for (i=0; i<arr.length && r>=arr[i]; i++);
  
  return values[i];
},
b5.AABB = {
	RectTestRect: function(x1,y1,w1,h1,x2,y2,w2,h2) {
		let hw1 = w1/2,
		hh1 = h1/2,
		hw2 = w2/2,
		hh2 = h2/2;
		return x1-hw1 < x2+hw2 && x1+hw1 > x2-hw2 && y1-hh1 < y2+hh2 && y1+hh1 > y2-hh2;
	},
	RectTestCircle: function(rx,ry,rw,rh,cx,cy,radius) {
		//Weird wizardy going	on here
		let left = rx-rw/2,
		right = rx+rw/2,
		top = ry-rh/2,
		bottom = ry+rh/2,
		offsetX = cx < left ? left : cx > right ? right : cx,
		offsetY = cy < top ? top : cy > bottom ? bottom : cy,
		deltaX = cx - offsetX,
		deltaY = cy - offsetY,
		distance = radius*radius/2;
		return deltaX*deltaX + deltaY*deltaY < distance*2;
	},
	CircleTestCircle: function(cx1,cy1,r1,cx2,cy2,r2) {
		//...
		let dX = cx1 - cx2,
		dY = cy1 - cy2,
		distance = Math.sqrt((dX*dX)+(dY*dY));
		return distance <= r1+r2;
	}
},
b5.Utils.GetActorPhysicsBodyByType = function(r) {
	switch(r) {
		case b5.Actor.Type_Image:
		case b5.Actor.Type_Rect:
		case b5.Actor.Type_Map:
		case b5.Actor.Type_Label:
		case b5.Actor.Type_Particle:
			return b5.Shape.TypeBox;
		case b5.Actor.Type_Arc:
			return b5.Shape.TypeCircle;
		case b5.Actor.Type_Polygon:
		  return b5.Shape.TypePolygon;
	}
};
b5.Utils.CollisionFilter = {
	layers: [
 		0x0001, 0x0002, 0x0004, 0x0008,
  	0x0010, 0x0020, 0x0040,	0x0080,
  	0x0100, 0x0200, 0x0400, 0x0800,
  	0x1000, 0x2000, 0x4000, 0x8000
  ],
 FilterData: window.Box2D && new Box2D.Dynamics.b2FilterData()
},
b5.Utils.GetCollisionLayers = function(e) {
 	for(var i = 0, l = 0; i < e.length; i++) l += b5.Utils.CollisionFilter.layers[e[i]];
	return l;
};